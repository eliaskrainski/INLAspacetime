[{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/transparent_barriers.html","id":"the-transparent-barrier-model","dir":"Articles","previous_headings":"","what":"The transparent barrier model","title":"The SPDE model with transparent barriers","text":"model considers SPDE domain Œ©\\Omega partitioned kk subdomains Œ©d\\Omega_d, d‚àà{1,‚Ä¶,k}d\\\\{1,\\ldots,k\\}, ‚à™d=1kŒ©d=Œ©\\cup_{d=1}^k\\Omega_d=\\Omega. common marginal variance assumed range can particular Œ©d\\Omega_d, rdr_d. Bakka et al. (2019), precision matrix ùêê=1œÉ2ùêëùêÇÃÉ‚àí1ùêë ùêër=ùêÇ+18‚àëd=1krd2ùêÜd,ùêÇÃÉr=œÄ2‚àëd=1krd2ùêÇÃÉd \\mathbf{Q} = \\frac{1}{\\sigma^2}\\mathbf{R}\\mathbf{\\tilde{C}}^{-1}\\mathbf{R} \\textrm{ }   \\mathbf{R}_r = \\mathbf{C} +  \\frac{1}{8}\\sum_{d=1}^kr_d^2\\mathbf{G}_d , \\;\\;\\; \\mathbf{\\tilde{C}}_r =  \\frac{\\pi}{2}\\sum_{d=1}^kr_d^2\\mathbf{\\tilde{C}}_d  œÉ2\\sigma^2 marginal variance. Finite Element Method - FEM matrices: ùêÇ\\mathbf{C}, defined ùêÇi,j=‚ü®œài,œàj‚ü©=‚à´Œ©œài(ùê¨)œàj(ùê¨)‚àÇùê¨, \\mathbf{C}_{,j} = \\langle \\psi_i, \\psi_j \\rangle =    \\int_\\Omega \\psi_i(\\mathbf{s}) \\psi_j(\\mathbf{s}) \\partial \\mathbf{s}, computed whole domain, ùêÜd\\mathbf{G}_d ùêÇÃÉd\\mathbf{\\tilde{C}}_d defined pair matrices subdomain (ùêÜd),j=‚ü®1Œ©d‚àáœài,‚àáœàj‚ü©=‚à´Œ©d‚àáœài(ùê¨)‚àáœàj(ùê¨)‚àÇùê¨ (ùêÇÃÉd),=‚ü®1Œ©dœài,1‚ü©=‚à´Œ©dœài(ùê¨)‚àÇùê¨. (\\mathbf{G}_d)_{,j} = \\langle 1_{\\Omega_d} \\nabla \\psi_i, \\nabla \\psi_j \\rangle =    \\int_{\\Omega_d} \\nabla \\psi_i(\\mathbf{s}) \\nabla \\psi_j(\\mathbf{s}) \\partial \\mathbf{s}\\; \\textrm{ }\\;  (\\mathbf{\\tilde{C}}_d)_{,} = \\langle 1_{\\Omega_d} \\psi_i, 1 \\rangle =    \\int_{\\Omega_d} \\psi_i(\\mathbf{s}) \\partial \\mathbf{s} . case r=r1=r2=‚Ä¶=rkr = r_1 = r_2 = \\ldots = r_k ùêër=ùêÇ+r28ùêÜ\\mathbf{R}_r = \\mathbf{C}+\\frac{r^2}{8}\\mathbf{G} ùêÇÃÉr=œÄr22ùêÇÃÉ\\mathbf{\\tilde{C}}_r = \\frac{\\pi r^2}{2}\\mathbf{\\tilde{C}} giving ùêê=2œÄœÉ2(1r2ùêÇùêÇÃÉ‚àí1ùêÇ+18ùêÇùêÇÃÉ‚àí1ùêÜ+18ùêÜùêÇÃÉ‚àí1ùêÇ+r264ùêÜùêÇÃÉ‚àí1ùêÜ) \\mathbf{Q} = \\frac{2}{\\pi\\sigma^2}( \\frac{1}{r^2}\\mathbf{C}\\mathbf{\\tilde{C}}^{-1}\\mathbf{C} +  \\frac{1}{8}\\mathbf{C}\\mathbf{\\tilde{C}}^{-1}\\mathbf{G} + \\frac{1}{8}\\mathbf{G}\\mathbf{\\tilde{C}}^{-1}\\mathbf{C} + \\frac{r^2}{64}\\mathbf{G}\\mathbf{\\tilde{C}}^{-1}\\mathbf{G}  )  coincides stationary case Lindgren Rue (2015), using ùêÇÃÉ\\tilde{\\mathbf{C}} place ùêÇ\\mathbf{C}.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/transparent_barriers.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"The SPDE model with transparent barriers","text":"practice define rdr_d rd=pdrr_d = p_d r, known p1,‚Ä¶,pkp_1,\\ldots,p_k constants. gives ùêÇÃÉr=œÄr22‚àëd=1kpd2ùêÇÃÉd=œÄr22ùêÇÃÉp1,‚Ä¶,pk 18‚àëd=1krd2ùêÜd=r28‚àëd=1kpd2ùêÜÃÉd=r28ùêÜÃÉp1,‚Ä¶,pk \\mathbf{\\tilde{C}}_r =  \\frac{\\pi r^2}{2}\\sum_{d=1}^kp_d^2\\mathbf{\\tilde{C}}_d = \\frac{\\pi r^2}{2} \\mathbf{\\tilde{C}}_{p_1,\\ldots,p_k} \\textrm{ } \\frac{1}{8}\\sum_{d=1}^kr_d^2\\mathbf{G}_d = \\frac{r^2}{8}\\sum_{d=1}^kp_d^2\\mathbf{\\tilde{G}}_d =  \\frac{r^2}{8}\\mathbf{\\tilde{G}}_{p_1,\\ldots,p_k}  ùêÇÃÉp1,‚Ä¶,pk\\mathbf{\\tilde{C}}_{p_1,\\ldots,p_k} ùêÜÃÉp1,‚Ä¶,pk\\mathbf{\\tilde{G}}_{p_1,\\ldots,p_k} pre-computed.","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"abstract","dir":"Articles > Web","previous_headings":"","what":"Abstract","title":"A barrier model illustration","text":"tutorial illustrate new implementation model proposed Bakka et al. (2019). consider problem modeling spatial domain accounting physical barriers. original implementation illustrated tutorial. re-implementation consider new (faster) computational method available INLA package. See details end vignette update old working code use new implementation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"introduction","dir":"Articles > Web","previous_headings":"","what":"Introduction","title":"A barrier model illustration","text":"Suppose phenomena varies spatial domain. Models usually consider correlation observations made. Considering pair observations, correlation usually specified function distance location sites observations collected. barrier spatial domain, correlation pair observations taken sites different sides barrier shall consider barrier. resume, longer just function distance. Basically, correlation points two different sides barrier decay faster (usual) zero ‚Äúcross domain‚Äù. order illustrate problem, let us define rectangle spatial domain: now set barrier two polygons defined follows Define objects using package: can visualize polygons order make problem clear:  problem model data sides barrier considering correlation account barrier. proposed method Bakka et al. (2019) models entire domain, including barrier. deal barrier, correlation range set reasonable shorter barrier domain one domain interest. idea simple add parameter usual stationary model. Furthermore, can implemented inferential method. Bakka et al. (2019), proposed method consider Stochastic Partial Differential Equations - SPDE approach proposed Lindgren, Rue, Lindstr√∂m (2011). implementation illustrated tutorial deals discretization domain. discretization considered care. fraction fixed analysis interplay width barrier. One choose small enough fraction, see details Bakka et al. (2019). first load packages used tutorial.","code":"rxy <- c(10, 6) r <- mean(rxy) bb <- rbind(     c(0, 1)*rxy[1],     c(0, 1)*rxy[2]) domain.xy <- cbind(     c(0, 1, 1, 0, 0) * rxy[1],     c(0, 0, 1, 1, 0) * rxy[2]) barrier1 <- cbind(   cos(seq(0, 2*pi, length=50)) * 0.7 + 0.50 * rxy[1],    sin(seq(0, 2*pi, length=50)) * 1.0 + 0.75 * rxy[2]) barrier2 <- cbind(   c(0.50, 1.50, 1.50, 0.50, 0.50) * rxy[1],   c(0.33, 0.33, 0.40, 0.40, 0.33) * rxy[2]) library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE domain <- st_sfc(st_polygon(list(domain.xy))) barriers <- st_sfc(st_multipolygon(   list(st_polygon(list(barrier1)),         st_polygon(list(barrier2))))) library(ggplot2) gg0 <- ggplot() +    xlab(\"\") + ylab(\"\") +   theme_minimal() + coord_fixed() gg0 + xlim(bb[1, ]) +   geom_sf(data = domain, fill = \"blue\") +   geom_sf(data = barriers, fill = \"gray\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. library(INLA) #> Loading required package: Matrix #> This is INLA_25.06.13 built 2025-06-12 20:38:06 UTC. #>  - See www.r-inla.org/contact-us for how to get help. #>  - List available models/likelihoods/etc with inla.list.models() #>  - Use inla.doc(<NAME>) to access documentation library(INLAspacetime) #> Loading required package: fmesher #> see more on https://eliaskrainski.github.io/INLAspacetime library(inlabru) library(patchwork) library(fmesher)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"model-definition-and-discretization","dir":"Articles > Web","previous_headings":"","what":"Model definition and discretization","title":"A barrier model illustration","text":"Let us consider underlying random field specified domain. random field discretized using mesh precision matrix defined distribution mesh nodes. define barrier model proposed Bakka et al. (2019) make use triangulation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"mesh-and-triangles","dir":"Articles > Web","previous_headings":"","what":"Mesh and triangles","title":"A barrier model illustration","text":"solution consider discretization spatial domain simplest one using triangles. Therefore start following mesh made small triangles domain bigger around . solution needs triangles inside barrier domain identified. triangle center check inside barrier domain create vector identify domain triangle center inside can visualize mesh color triangle centers using ggplot methods inlabru package  Notice mesh goes beyond domain area including boundary extension. also defined barrier also defined boundary. Therefore, building model discretization, barrier well defined behavior process intended.","code":"mesh <- fm_mesh_2d(     loc.domain = domain.xy,      max.edge = c(0.03, 0.1) * r,     offset = c(0.1, 0.3) * r,     cutoff = 0.01 * r) mesh$n #> [1] 4364 triBarrier <- unlist(fm_contains(   x = barriers,    y = mesh,    type = \"centroid\")) triCenters.xy <- cbind(   mesh$loc[mesh$graph$tv[,1], 1:2] +   mesh$loc[mesh$graph$tv[,2], 1:2] +   mesh$loc[mesh$graph$tv[,3], 1:2])/3 gg0 +      gg(mesh) +     geom_point(aes(         x = triCenters.xy[triBarrier, 1],         y = triCenters.xy[triBarrier, 2]))"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"precision-matrix","dir":"Articles > Web","previous_headings":"Mesh and triangles","what":"Precision matrix","title":"A barrier model illustration","text":"parameters model range marginal variance, also define range parameter barrier method works. consider range barrier fraction range domain. just use half average rectangle edges range domain 10% barrier. now compute Finite Element matrices needed model discretization, detailed Bakka et al. (2019). now build precision matrix ","code":"sigma <- 1 (ranges <- r * c(0.5, 0.05))  #> [1] 4.0 0.4 bfem <- mesh2fem.barrier(mesh, triBarrier) Q <- inla.barrier.q(bfem, ranges = ranges, sigma = sigma)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"correlation","dir":"Articles > Web","previous_headings":"Mesh and triangles","what":"Correlation","title":"A barrier model illustration","text":"can use discretized model compute correlation pairs points order check properties model. Let us define function computes correlation given set location mesh node location. Consider set locations compute correlations correlation mesh node specified locations. like visualize image correlation location ‚Äúeverywhere‚Äù. Let us build projector project vector mesh nodes fine grid projected can now create data.frame expanded coordinates pixels correlations can projected prepared plotting order help visualization correlations, dropped pixels small correlations, less 0.10.1. can now visualize images  Notice model also defined barrier domain. Therefore can computations barrier. visualized correlation barriers well, added barrier borders, can see action short spatial range barriers. visual inspection helps verify short range barrier domain set small enough.","code":"localCorrel <- function(locs, mesh, Q) {   nl <- nrow(locs)   ii <- sapply(1:nl, function(i)     which.min(rowSums(sweep(       mesh$loc[, 1:ncol(locs)], 2, locs[i, ], \"-\")^2)))   b <- matrix(0, nrow(Q), nl)   for(i in 1:nl)     b[ii[i], i] <- 1   cc <- inla.qsolve(Q, b)   s <- sqrt(diag(inla.qinv(Q)))   for(i in 1:nl)     cc[, i] <- cc[, i] / (s * s[ii[i]])   return(drop(cc)) } locs <- cbind(c(0.4, 0.6, 0.7, 0.5) * rxy[1],                c(0.7, 0.6, 0.3, 0.5) * rxy[2]) mcorrels <- localCorrel(locs, mesh, Q) dim(mcorrels)  #> [1] 4364    4 pgrid <- fm_evaluator(   mesh,   lattice = fm_evaluator_lattice(     mesh,     xlim = bb[1, ],     ylim = bb[2, ],     dims = round(500 * rxy/r)   ) ) gcorrels <- as.matrix(fm_evaluate(   pgrid, field = mcorrels )) grid.df <- data.frame(   x = rep(pgrid$x, times = length(pgrid$y)),    y = rep(pgrid$y, each = length(pgrid$x))) ggcorrels <- do.call(   rbind,    lapply(1:4, function(l)      data.frame(grid.df,                 loc = paste(sprintf(\"%1.1f\", locs[l, 1]),                             sprintf(\"%1.1f\", locs[l, 2]), sep = \", \"),                 correlation = gcorrels[, l]))) gg0 +    geom_raster(     data = ggcorrels[ggcorrels$correlation>0.1, ],      mapping = aes(x = x, y = y, fill = correlation)) +    facet_wrap(~ loc) +    add.b0 + gg.add ## look to the appendix for the code for this"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"data-simulation","dir":"Articles > Web","previous_headings":"","what":"Data simulation","title":"A barrier model illustration","text":"consider random field observed noise. first sample random field distribution.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"a-random-field-sample","dir":"Articles > Web","previous_headings":"Data simulation","what":"A random field sample","title":"A barrier model illustration","text":"several algorithms sample random field specified continuous domain without barriers. use already defined precision matrix draw sample mesh nodes values sampled mesh nodes can projected set small pixels visualization purpose can now visualize projected simulated values small pixels, inclusive values barriers.  visualization simulated process barrier allows visual inspection model property. process different sides barriers seen independent, illustrated correlation plots.","code":"u <- inla.qsample(1, Q, seed = 1)[,1] #> Warning in inla.qsample(1, Q, seed = 1): Since 'seed!=0', parallel model is #> disabled and serial model is selected ugrid.sim <- fm_evaluate(pgrid, field = u) grid.df$u <- as.vector(ugrid.sim) gg0 +    geom_raster(     data = grid.df,      aes(x = x, y = y, fill = u)) +    add.b0 + gg.add ## look to the appendix for the code for this"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"sampling-a-set-of-observations","dir":"Articles > Web","previous_headings":"Data simulation","what":"Sampling a set of observations","title":"A barrier model illustration","text":"define initial set locations consider observe field locations. start set locations chosen completely random rectangle domain, including barrier part check inside barrier locations form data consider locations desired domain outside barrier simulate outcome, project field locations, add intercept random noise","code":"n0 <- 500 set.seed(2) xy0 <- cbind(   runif(n0, bb[1, 1], bb[1, 2]),   runif(n0, bb[2, 1], bb[2, 2])) ii <- which(sapply(st_intersects(   x = st_as_sf(data.frame(x=xy0[, 1], y = xy0[, 2]), coords = c('x', 'y')),   y = barriers), length)==0) dataset <- data.frame(   x = xy0[ii, 1], y = xy0[ii, 2]) (n <- nrow(dataset)) #> [1] 464 sigma.e <- 1 set.seed(3) dataset$outcome <-      drop(fm_evaluate(         mesh,         loc = cbind(dataset$x, dataset$y),         field = u)) +    10 + rnorm(n, 0.0, sigma.e)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"model-fitting","dir":"Articles > Web","previous_headings":"","what":"Model fitting","title":"A barrier model illustration","text":"illustrate use function INLAspacetime implement barrier model Bakka et al. (2019). implementation consider cgeneric computational method useful implement new models INLA. method allows computations INLA take full advantage parallel computations, achieving shorter computation time original implementation. define model object use model formula inlabru way, field name spatial effect: inlabru main function can supplied model formula, data family, follows","code":"bmodel <- barrierModel.define(     mesh = mesh,      barrier.triangles = triBarrier,     prior.range = c(1, 0.01), ## P(range < 1) = 0.01     prior.sigma = c(1, 0.01), ## P(sigma > 1) = 0.01     range.fraction = 0.1) model <- outcome ~ Intercept(1) +     field(cbind(x, y), model = bmodel) result <- bru(     model, dataset, family = \"gaussian\")"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"results","dir":"Articles > Web","previous_headings":"","what":"Results","title":"A barrier model illustration","text":"can see summary posterior marginal distribution intercept hyper-parameters computations performed internal scale. log range log(œÉ\\sigma), log(1/œÉe2)\\log(1/\\sigma_e^2). However, can transform hyper-parameters internal marginal scale scale transformed posterior marginal distributions can extract summary compare values used sample data: can also visualize posterior marginal distributions ","code":"result$summary.fix #>               mean        sd 0.025quant 0.5quant 0.975quant     mode      kld #> Intercept 10.11292 0.4112725   9.303943 10.10408   10.97211 10.10504 177.7471 pmarginals <-      list(         data.frame(             param = \"sigma.e\",             inla.tmarginal(                 function(x) exp(-x/2),                 result$internal.marginals.hyperpar[[1]])),         data.frame(             param = \"range\",             inla.tmarginal(                 function(x) exp(x),                 result$internal.marginals.hyperpar[[2]])),         data.frame(             param = \"sigma\",             inla.tmarginal(                 function(x) exp(x),                 result$internal.marginals.hyperpar[[3]]))     ) rbind(true = c(sigma.e = sigma.e, range = ranges[1], sigma = 1),       sapply(pmarginals, function(m)              unlist(inla.zmarginal(m[, -1], TRUE))[1:2])) #>         sigma.e    range     sigma #> true 1.00000000 4.000000 1.0000000 #> mean 1.04421133 4.048536 0.9017051 #> sd   0.03813238 1.100455 0.1405102 ggplot(do.call(rbind, pmarginals)) +      geom_line(aes(x=x, y=y)) +      facet_wrap(~param, scales = \"free\") +     theme_minimal()"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"the-fitted-field","dir":"Articles > Web","previous_headings":"Results","what":"The fitted field","title":"A barrier model illustration","text":"can visualize summaries fitted field. posterior mean standard deviation can projected small pixels added raster data help visualization, filter grid pixels considering barriers. can now visualize posterior mean  estimated field, considering posterior mean shown, exhibits different pattern side barrier, particularly far tip. Therefore successfully accounted barrier model. See tutorial details visualize implied correlation two points. Similarly, can plot posterior standard deviation field, data locations used estimate model. lower values around densely sampled locations higher values otherwise. highest near boundaries, including boundary barriers, far observed locations.","code":"grid.df$u.mean <- as.vector(   fm_evaluate(     pgrid,     result$summary.random$field$mean)) grid.df$u.sd <- as.vector(   fm_evaluate(     pgrid,     result$summary.random$field$sd)) gInBarrier <- which(sapply(st_intersects(   x = st_as_sf(grid.df, coords = c('x', 'y')),   y = barriers), length)==0) gg0 +    geom_raster(     data = grid.df[!gInBarrier, ],      aes(x = x, y = y, fill = u.mean)) +    gg.add ## look to the appendix for the code for this gg0 +    geom_raster(     data = grid.df[!gInBarrier, ],      aes(x = x, y = y, fill = u.sd)) +    geom_point(data = dataset, aes(x = x, y = y)) +   gg.add ## look to the appendix for the code for this"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"appendix-a-adapting-old-code","dir":"Articles > Web","previous_headings":"","what":"Appendix A: adapting old code","title":"A barrier model illustration","text":"adapt code based tutorial, one consider two new functions implemented, detailed bellow: arguments new functions names old ones. new function used define model additional arguments. See help function details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"appendix-b-ggplot-reused-code","dir":"Articles > Web","previous_headings":"","what":"Appendix B: ggplot reused code","title":"A barrier model illustration","text":"additional ggplot2 code used","code":"gg.add <- list(   scale_fill_distiller(     type = \"div\",      palette = \"RdBu\",      na.value = \"transparent\") ) add.b0 <- list(   geom_polygon(     mapping = aes(x, y),      data = data.frame(       x = pmin(barrier1[,1], bb[1, 2]),        y = pmin(barrier1[,2], bb[2, 2])     ), colour = \"black\",    fill = gray(0.9, 0.5)), ##\"transparent\"),   geom_polygon(     mapping = aes(x, y),      data = data.frame(       x = pmin(barrier2[,1], bb[1, 2]),        y = pmin(barrier2[,2], bb[2, 2])      ), colour = \"black\",      fill = gray(0.9, 0.5))##\"transparent\") )"},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"abstract","dir":"Articles > Web","previous_headings":"","what":"Abstract","title":"The Piemonte dataset example","text":"vignette illustrate fit spacetime models Lindgren et al. (2024), see [SORT vol.¬†48, . 1, pp.¬†3-66] related code, data analysed Cameletti et al. (2013). perform use Bayesian paradigm theINLA package, using features provided inlabru package facilitate coding.","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"the-packages-and-setup","dir":"Articles > Web","previous_headings":"Introduction","what":"The packages and setup","title":"The Piemonte dataset example","text":"start loading required packages visualizations, ggplot2 patchwork packages. ask return WAIC, DIC CPO","code":"library(ggplot2) library(patchwork) library(INLA) #> Loading required package: Matrix #> This is INLA_25.06.13 built 2025-06-12 20:38:06 UTC. #>  - See www.r-inla.org/contact-us for how to get help. #>  - List available models/likelihoods/etc with inla.list.models() #>  - Use inla.doc(<NAME>) to access documentation library(INLAspacetime) #> Loading required package: fmesher #> see more on https://eliaskrainski.github.io/INLAspacetime library(inlabru) library(fmesher) ctrc <- list(   waic = TRUE,   dic = TRUE,   cpo = TRUE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"getting-the-dataset","dir":"Articles > Web","previous_headings":"Introduction","what":"Getting the dataset","title":"The Piemonte dataset example","text":"use dataset analysed Cameletti et al. (2013), can downloaded follows. First, set filenames Download read borders file Download read coordinates file Download read dataset Inspect dataset Prepare time used Standardize covariates used data analysis define dataset including needed information outcome log PM10, used Cameletti et al. (2013).","code":"u0 <- paste0(     \"http://inla.r-inla-download.org/\",     \"r-inla.org/case-studies/Cameletti2012/\") coofl <- \"coordinates.csv\" datafl <- \"Piemonte_data_byday.csv\" bordersfl <- \"Piemonte_borders.csv\" ### get the domain borders if(!file.exists(bordersfl))     download.file(paste0(u0, bordersfl), bordersfl) dim(pborders <- read.csv(bordersfl)) #> [1] 27821     2 ### get the coordinates if(!file.exists(coofl))     download.file(paste0(u0, coofl), coofl) dim(locs <- read.csv(coofl)) #> [1] 24  3 ### get the dataset if(!file.exists(datafl))     download.file(paste0(u0, datafl), datafl) dim(pdata <- read.csv(datafl)) #> [1] 4368   11 head(pdata) #>   Station.ID     Date     A   UTMX    UTMY   WS   TEMP   HMIX PREC   EMI PM10 #> 1          1 01/10/05  95.2 469.45 4972.85 0.90 288.81 1294.6    0 26.05   28 #> 2          2 01/10/05 164.1 423.48 4950.69 0.82 288.67 1139.8    0 18.74   22 #> 3          3 01/10/05 242.9 490.71 4948.86 0.96 287.44 1404.0    0  6.28   17 #> 4          4 01/10/05 149.9 437.36 4973.34 1.17 288.63 1042.4    0 29.35   25 #> 5          5 01/10/05 405.0 426.44 5045.66 0.60 287.63 1038.7    0 32.19   20 #> 6          6 01/10/05 257.5 394.60 5001.18 1.02 288.59 1048.3    0 34.24   41 range(pdata$Date <- as.Date(pdata$Date, \"%d/%m/%y\")) #> [1] \"2005-10-01\" \"2006-03-31\" pdata$time <- as.integer(difftime(     pdata$Date, min(pdata$Date), units = \"days\")) + 1 ### prepare the covariates xnames <- c(\"A\", \"WS\", \"TEMP\", \"HMIX\", \"PREC\", \"EMI\") xmean <- colMeans(pdata[, xnames]) xsd <- sapply(pdata[xnames], sd)  ### prepare the data (st loc, scale covariates and log PM10) dataf <- data.frame(pdata[c(\"UTMX\", \"UTMY\", \"time\")],                     scale(pdata[xnames], xmean, xsd),                     y = log(pdata$PM10)) str(dataf) #> 'data.frame':    4368 obs. of  10 variables: #>  $ UTMX: num  469 423 491 437 426 ... #>  $ UTMY: num  4973 4951 4949 4973 5046 ... #>  $ time: num  1 1 1 1 1 1 1 1 1 1 ... #>  $ A   : num  -1.3956 -0.7564 -0.0254 -0.8881 1.4785 ... #>  $ WS  : num  -0.0777 -0.2319 0.038 0.4429 -0.6561 ... #>  $ TEMP: num  2.1 2.07 1.82 2.06 1.86 ... #>  $ HMIX: num  2.18 1.69 2.53 1.38 1.37 ... #>  $ PREC: num  -0.29 -0.29 -0.29 -0.29 -0.29 ... #>  $ EMI : num  -0.1753 -0.3454 -0.6353 -0.0985 -0.0324 ... #>  $ y   : num  3.33 3.09 2.83 3.22 3 ..."},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"the-data-model-definition","dir":"Articles > Web","previous_headings":"","what":"The data model definition","title":"The Piemonte dataset example","text":"consider following linear mixed model outcome ùê≤=ùêñùõÉ+ùêÄùêÆ+ùêû  \\mathbf{y} = \\mathbf{W}\\mathbf{\\beta} + \\mathbf{}\\mathbf{u} + \\mathbf{e}  Œ≤\\beta fixed effects, regression coefficients including intercept, matrix covariates ùêñ\\mathbf{W}, ùêÆ\\mathbf{u} spatio-temporal random effect matrix ùêÄ\\mathbf{} projector matrix discretized domain data. spatio-temporal random effect ùêÆ\\mathbf{u} defined continuous spacetime domain discretized considering meshes time space. difference Cameletti et al. (2013) now use models Lindgren et al. (2024) ùêÆ\\mathbf{u}. Define temporal mesh, knot spaced h, h = 1 means one per day. Define spatial mesh, used Cameletti et al. (2013). Visualize spatial mesh, border locations.  set prior likelihood precision considering PC-prior, Simpson et al. (2017), following probabilistic statements: P(œÉe>UœÉe\\sigma_e > U_{\\sigma_e}) = Œ±œÉe\\alpha_{\\sigma_e}, using UœÉeU_{\\sigma_e} = 1 Œ±œÉe=0.05\\alpha_{\\sigma_e} = 0.05. inlabru can define likelihood model like() function use fitting models different linear predictors later. linear predictor, right-rand side formula, can defined using expression models going fit ","code":"nt <- max(pdata$time) h <- 1 tmesh <- fm_mesh_1d(   loc = seq(1, nt + h/2, h),    degree = 1) tmesh$n #> [1] 182 smesh <- fm_mesh_2d(     cbind(locs[,2], locs[,3]),     loc.domain = pborders,     max.edge = c(50, 300),     offset = c(10, 140),     cutoff = 5,     min.angle = c(26, 21)) smesh$n #> [1] 142 par(mfrow = c(1,1), mar = c(0,0,1,0)) plot(smesh, asp = 1) lines(pborders, lwd = 2, col = \"green4\") points(locs[, 2:3], pch = 19, col = \"blue\") lkprec <- list(     prec = list(prior = \"pcprec\", param = c(1, 0.05))) lhood <- like(   formula = y ~ .,   family = \"gaussian\",   control.family = list(     hyper = lkprec),   data = dataf) M <- ~ -1 + Intercept(1) + A + WS + TEMP + HMIX + PREC + EMI +     field(list(space = cbind(UTMX, UTMY),                 time = time),           model = stmodel)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"the-spacetime-models","dir":"Articles > Web","previous_headings":"","what":"The spacetime models","title":"The Piemonte dataset example","text":"implementation spacetime model uses cgeneric interface INLA, see documentation details. Therefore C code mainly build precision matrix compute model parameter priors compiled static library. code included INLAspacetime package also copied INLA package compiled compilers order avoid possible mismatches. order use , define matrices vectors needed, including prior parameter definitions. class models Lindgren et al. (2024) spatial range, temporal range marginal standard deviation parameters. consider PC-prior, Fuglstad et al. (2017), parameters defined probability statements: P(rs<Ursr_s<U_{r_s})=Œ±rs\\alpha_{r_s}, P(rt<Urtr_t<U_{r_t})=Œ±rt\\alpha_{r_t} P(œÉ<UœÉ\\sigma<U_{\\sigma})=Œ±œÉ\\alpha_{\\sigma}. consider Urs=100U_{r_s}=100, Urt=5U_{r_t}=5 UœÉ=2U_{\\sigma}=2. Œ±rs=Œ±rt=Œ±œÉ=0.05\\alpha_{r_s}=\\alpha_{r_t}=\\alpha_{\\sigma}=0.05 selection one models Lindgren et al. (2024) chosing Œ±t\\alpha_t, Œ±s\\alpha_s Œ±e\\alpha_e integer numbers. start considering model Œ±t=1\\alpha_t=1, Œ±s=0\\alpha_s=0 Œ±t=2\\alpha_t=2, model separable spatio-temporal covariance, fit models later.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"defining-a-particular-model","dir":"Articles > Web","previous_headings":"The spacetime models","what":"Defining a particular model","title":"The Piemonte dataset example","text":"define object needed use function stModel.define() model selected considering values Œ±t\\alpha_t, Œ±s\\alpha_s Œ±e\\alpha_e collapsed. order illustrate done, can set overall integrate--zero constraint, need helps model components identification. uses weights based mesh node volumes, temporal spatial meshes. can set automatically defining model adding constr = TRUE. Initial values hyper-parameters help fit models less computing time. also important consider light dataset parameter scale. example, consider spatial domain within box around 203.7203.7 266.5266.5 kilometers, already building mesh setting prior rsr_s. can set initial values log parameters take less iterations converge: code fit model inlabru Summary posterior marginal distributions fixed effects hyperparameters, transform posterior marginal distributions model hyperparameters ones computed internal scale, log(1/œÉe2)\\log(1/\\sigma^2_e), log(rs)\\log(r_s), log(rt)\\log(r_t) log(œÉ)\\log(\\sigma), user scale parametrization, œÉe\\sigma_e, rsr_s, rtr_t œÉ\\sigma, respectivelly. compute show summary However, better look posterior marginal , visualize later. model fitted Cameletti et al. (2013) includes two covariates setup model discrete temporal domain temporal correlation modeled first order autoregression parameter œÅ\\rho. fitted model defined considering continuous temporal domain range parameter rsr_s. However, first order autocorrelation taken œÅ=exp(‚àíh8ŒΩ/rs)\\rho = \\exp(-h\\sqrt{8\\nu}/r_s), hh temporal resolution used temporal mesh ŒΩ\\nu equal 0.50.5 fitted model. can compare ou results Table 3 Cameletti et al. (2013) ","code":"model <- \"102\" stmodel <- stModel.define(     smesh, tmesh, model,     control.priors = list(         prs = c(150, 0.05),         prt = c(10, 0.05),         psigma = c(5, 0.05)),     constr = TRUE) theta.ini <- c(4, 7, 7, 1) fit102 <-      bru(M,         lhood,         options = list(             control.mode = list(theta = theta.ini, restart = TRUE),             control.compute = ctrc)) fit102$summary.fixed[, c(1, 2, 3, 5)] #>                  mean          sd   0.025quant   0.975quant #> Intercept  3.73693061 0.246403217  3.250713153  4.222809337 #> A         -0.17938374 0.050035674 -0.278564108 -0.081320138 #> WS        -0.06042770 0.008441993 -0.076971775 -0.043862099 #> TEMP      -0.12240340 0.035189248 -0.191477703 -0.053464320 #> HMIX      -0.02373509 0.013205191 -0.049591843  0.002199483 #> PREC      -0.05355169 0.008607082 -0.070415054 -0.036657517 #> EMI        0.03628998 0.015196106  0.006127505  0.065808831 post.h <- list(   sigma_e = inla.tmarginal(function(x) exp(-x/2),                             fit102$internal.marginals.hyperpar[[1]]),   range_s = inla.tmarginal(function(x) exp(x),                             fit102$internal.marginals.hyperpar[[2]]),   range_t = inla.tmarginal(function(x) exp(x),                             fit102$internal.marginals.hyperpar[[3]]),   sigma_u = inla.tmarginal(function(x) exp(x),                             fit102$internal.marginals.hyperpar[[4]]) ) shyper <- t(sapply(post.h, function(m)    unlist(inla.zmarginal(m, silent = TRUE)))) shyper[, c(1, 2, 3, 7)] #>                mean           sd  quant0.025  quant0.975 #> sigma_e   0.1810172  0.003768311   0.1737449   0.1885442 #> range_s 280.5923057 17.026665052 248.8037529 315.6554741 #> range_t  49.8887373  8.128000912  36.0711858  67.9213506 #> sigma_u   1.1370733  0.087019829   0.9781850   1.3197490 c(shyper[c(1, 4, 2), 1],    a = exp(-h * sqrt(8 * 0.5) / shyper[3, 1])) #>     sigma_e     sigma_u     range_s           a  #>   0.1810172   1.1370733 280.5923057   0.9607037"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"comparing-different-models","dir":"Articles > Web","previous_headings":"","what":"Comparing different models","title":"The Piemonte dataset example","text":"now fit model 121121 uu well, use code building model matrices use code fitting follows join fits list object make easier working computing time model fit number fn-calls optimization posterior mode parameter model (internal scale) compute posterior marginal distribution hyper-parameters user-interpretable scale, like first model, Join make visualization easier  comparison model parameters ùêÆ\\mathbf{u} different models done light covariance functions illustrated Lindgren et al. (2024). fitted œÉe\\sigma_e different models comparable can see considering model 121121 ùêÆ\\mathbf{u}, posterior marginal concentrated values lower considering model 102102. can look posterior mean uu models see model ‚Äò121‚Äô wider spread.  can also check fitting statistics DIC, WAIC, negative log probability ordinates (LPO) cross-validated version (LCPO), summarized mean.","code":"model <- \"121\" stmodel <- stModel.define(     smesh, tmesh, model,     control.priors = list(         prs = c(150, 0.05),         prt = c(10, 0.05),         psigma = c(5, 0.05)),     constr = TRUE) fit121 <-      bru(M,         lhood,         options = list(             control.mode = list(theta = theta.ini, restart = TRUE),             control.compute = ctrc)) results <- list(\"u102\" = fit102, \"u121\" = fit121) sapply(results, function(r) r$cpu.used) #>                u102        u121 #> Pre       0.5349679   0.3474832 #> Running 156.2589943 257.0501661 #> Post      4.2275417   2.8170221 #> Total   161.0215039 260.2146714 sapply(results, function(r) r$misc$nfunc) #> u102 u121  #>  335  373 sapply(results, function(r) r$mode$theta) #>                                                  u102      u121 #> Log precision for the Gaussian observations 3.4192380  3.594767 #> Theta1 for field                            5.6336642  7.288947 #> Theta2 for field                            3.8857382 10.971288 #> Theta3 for field                            0.1209375  2.151164 posts.h2 <- lapply(1:2, function(m) vector(\"list\", 4L)) for(m in 1:2) {     posts.h2[[m]]$sigma_e =         data.frame(         parameter = \"sigma_e\",          inla.tmarginal(           function(x) exp(-x/2),            results[[m]]$internal.marginals.hyperpar[[1]]))     for(p in 2:4) {       posts.h2[[m]][[p]] <-          data.frame(         parameter = c(NA, \"range_s\", \"range_t\", \"sigma_u\")[p],          inla.tmarginal(           function(x) exp(x),            results[[m]]$internal.marginals.hyperpar[[p]])       )     } } posts.df <- rbind(   data.frame(model = \"102\", do.call(rbind, posts.h2[[1]])),   data.frame(model = \"121\", do.call(rbind, posts.h2[[2]])) )  ggplot(posts.df) +   geom_line(aes(x = x, y = y, group = model, color = model)) +   ylab(\"Density\") + xlab(\"\") +    facet_wrap(~parameter, scales = \"free\") par(mfrow = c(1, 1), mar = c(3, 3, 0, 0.0), mgp = c(2, 1, 0)) uu.hist <- lapply(results, function(r)     hist(r$summary.random$field$mean,          -60:60/20, plot = FALSE)) ylm <- range(uu.hist[[1]]$count, uu.hist[[2]]$count) plot(uu.hist[[1]], ylim = ylm,      col = rgb(1, 0.1, 0.1, 1.0), border = FALSE,       xlab = \"u\", main = \"\") plot(uu.hist[[2]], add = TRUE, col = rgb(0.1, 0.1, 1, 0.5), border = FALSE) legend(\"topleft\", c(\"separable\", \"non-separable\"),         fill = rgb(c(1,0.1), 0.1, c(0.1, 1), c(1, 0.5)),         border = 'transparent', bty = \"n\") t(sapply(results, function(r) {   c(DIC = mean(r$dic$local.dic, na.rm = TRUE),     WAIC = mean(r$waic$local.waic, na.rm = TRUE),     LPO = -mean(log(r$po$po), na.rm = TRUE),      LCPO = -mean(log(r$cpo$cpo), na.rm = TRUE)) })) #>             DIC       WAIC        LPO       LCPO #> u102 -0.3767765 -0.2596101 -0.4053567 -0.1174145 #> u121 -0.4110590 -0.3530444 -0.5083982 -0.1158616"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"the-automatic-group-leave-out-cross-validation","dir":"Articles > Web","previous_headings":"","what":"The automatic group-leave-out cross validation","title":"The Piemonte dataset example","text":"One may interested evaluating model prediction. leave-one-strategy already available INLA since several years ago, see Held, Schrodle, Rue (2010) details. Recently, automatic group cross validation strategy implemented, see Liu Rue (2023) details. can inspect detected observations posterior linear predictor correlated one, including . 100th observation model ‚Äú102‚Äù result model ‚Äú121‚Äù intersection , model setup used. can check observations dataset found locations nearby time. can compute negative mean log score lower number better","code":"g5cv <- lapply(   results, inla.group.cv, num.level.sets = 5,    strategy = \"posterior\", size.max = 50) g5cv$u102$group[[100]] #> $idx #> [1]  52  76  98 100 106 124 #>  #> $corr #> [1] 0.2578332 0.4297475 0.3005886 1.0000000 0.3299241 0.4297475 g5cv$u121$group[[100]] #> $idx #> [1]  52  76  98 100 124 148 #>  #> $corr #> [1] 0.1667474 0.3731407 0.1667474 1.0000000 0.3755889 0.1635859 dataf[g5cv$u102$group[[100]]$idx, ] #>       UTMX    UTMY time          A           WS     TEMP       HMIX       PREC #> 52  437.36 4973.34    3 -0.8881265  0.982687762 1.077344 -0.6959771 1.94505331 #> 76  437.36 4973.34    4 -0.8881265  0.674216318 1.297701  0.9479287 3.70037355 #> 98  423.48 4950.69    5 -0.7563919 -0.578948923 1.387847 -0.4413098 0.08590275 #> 100 437.36 4973.34    5 -0.8881265  0.770613644 1.441935  0.2530248 0.16426526 #> 106 416.65 4985.65    5  0.3225334 -0.000564966 1.397863  1.1608209 0.63052220 #> 124 437.36 4973.34    6 -0.8881265  0.751334179 1.618220  1.0845756 0.03692618 #>             EMI        y #> 52  -0.01821338 2.564949 #> 76  -0.01542101 2.708050 #> 98  -0.27115486 2.484907 #> 100  0.01622576 2.890372 #> 106 -0.61950205 2.708050 #> 124  0.02599903 2.995732 sapply(g5cv, function(r) -mean(log(r$cv), na.rm = TRUE)) #>       u102       u121  #> 0.04089277 0.06922738"},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/website_examples.html","id":"vignettes","dir":"Articles","previous_headings":"","what":"Vignettes","title":"Vignettes on the INLAspacetime website","text":"potentially long running examples/tutorials available (https://eliaskrainski.github.io/INLAspacetime/) barrier model illustration Piemonte dataset example","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elias Teixeira Krainski. Maintainer, author, copyright holder. Finn Lindgren. Author. Haavard Rue. Author.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Krainski E, Lindgren F, Rue H (2025). INLAspacetime: Spatial Spatio-Temporal Models using 'INLA'. R package version 0.1.12.003, https://github.com/eliaskrainski/INLAspacetime.","code":"@Manual{,   title = {INLAspacetime: Spatial and Spatio-Temporal Models using 'INLA'},   author = {Elias Teixeira Krainski and Finn Lindgren and Haavard Rue},   year = {2025},   note = {R package version 0.1.12.003},   url = {https://github.com/eliaskrainski/INLAspacetime}, }"},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"inlaspacetime","dir":"","previous_headings":"","what":"Spatial and Spatio-Temporal Models using INLA","title":"Spatial and Spatio-Temporal Models using INLA","text":"R package implement certain spatial spatio-temporal models, including spatio-temporal models proposed SORT vol.¬†48, . 1, pp.¬†3-66. uses cgeneric interface INLA package, implement models writing C code build precision matrix compiling INLA can use internally.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"we-have-implemented","dir":"","previous_headings":"","what":"We have implemented","title":"Spatial and Spatio-Temporal Models using INLA","text":"models presented diffusion-based spatio-temporal extension Gaussian Mat√©rn fields (2024). Finn Lindgren, Haakon Bakka, David Bolin, Elias Krainski H√•vard Rue. SORT vol.¬†48, . 1, pp.¬†3-66. (https://raco.cat/index.php/SORT/article/view/428665) barrier (transparent barriers) model proposed https://doi.org/10.1016/j.spasta.2019.01.002","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Spatial and Spatio-Temporal Models using INLA","text":"Please check ","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial and Spatio-Temporal Models using INLA","text":"‚ÄòINLA‚Äô package suggested one, need actually fitting model. can install can install current CRAN version INLAspacetime: can install latest version INLAspacetime GitHub ","code":"install.packages(\"INLA\",repos=c(getOption(\"repos\"),INLA=\"https://inla.r-inla-download.org/R/testing\"), dep=TRUE) install.packages(\"INLAspacetime\") ## install.packages(\"remotes\") remotes::install_github(\"eliaskrainski/INLAspacetime\",  build_vignettes=TRUE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"a-spacetime-example","dir":"","previous_headings":"","what":"A spacetime example","title":"Spatial and Spatio-Temporal Models using INLA","text":"Simulate fake data. Loading packages: Define spatial temporal discretization meshes Define spacetime model object used","code":"set.seed(1) n <- 5 dataf <- data.frame(     s1   = runif(n, -1, 1),     s2   = runif(n, -1, 1),     time = runif(n, 1, 4),     y    = rnorm(n, 0, 1)) str(dataf) #> 'data.frame':    5 obs. of  4 variables: #>  $ s1  : num  -0.469 -0.256 0.146 0.816 -0.597 #>  $ s2  : num  0.797 0.889 0.322 0.258 -0.876 #>  $ time: num  1.62 1.53 3.06 2.15 3.31 #>  $ y   : num  -0.00577 2.40465 0.76359 -0.79901 -1.14766 library(fmesher) library(INLA) library(INLAspacetime) #> see more on https://eliaskrainski.github.io/INLAspacetime smesh <- fm_mesh_2d(   loc = cbind(0,0),    max.edge = 5,    offset = 2) tmesh <- fm_mesh_1d(   loc = 0:5) stmodel <- stModel.define(     smesh = smesh, ## spatial mesh     tmesh = tmesh, ## temporal mesh     model = '121', ## model, see the paper     control.priors = list(         prs = c(1, 0.1), ## P(spatial range < 1) = 0.1         prt = c(5, 0), ## temporal range fixed to 5         psigma = c(1, 0.1) ## P(sigma > 1) = 0.1         )     )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"fit-the-model","dir":"","previous_headings":"","what":"Fit the model","title":"Spatial and Spatio-Temporal Models using INLA","text":"Define projector matrix spatial temporal meshes data , equivalently, fmesher methods tensor product spaces: Create ‚Äòfake‚Äô column used index. f() term Setting likelihood precision (fixed) Combine ‚Äòfake‚Äô index column .local Call main INLA function: Posterior marginal summaries fixed effect model parameters fixed.","code":"Aproj <- inla.spde.make.A(     mesh = smesh,     loc = cbind(dataf$s1, dataf$s2),     group = dataf$time,     group.mesh = tmesh ) Aproj <- fm_basis(   fm_tensor(list(space = smesh, time = tmesh)),   loc = list(     space = cbind(dataf$s1, dataf$s2),     time = dataf$time   ) ) dataf$st <- NA ctrl.lik <- list(   hyper = list(     prec = list(       initial = 10,        fixed = TRUE)       ) ) fmodel <- y ~ f(st, model = stmodel, A.local = Aproj) fit <- inla(     formula = fmodel,     data = dataf,     control.family = ctrl.lik) fit$summary.fixed #>                  mean       sd 0.025quant  0.5quant 0.975quant      mode #> (Intercept) 0.6934075 4.032682  -6.962392 0.5227421   9.417461 0.5550903 #>                      kld #> (Intercept) 7.405581e-05 fit$summary.hyperpar #>                   mean        sd 0.025quant 0.5quant 0.975quant      mode #> Theta1 for st 1.199208 0.4918283  0.3653922 1.161532   2.277316 0.9750207 #> Theta2 for st 1.435517 0.1710709  1.1031068 1.434032   1.776675 1.4277508"},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"using-the-inlabru","dir":"","previous_headings":"","what":"Using the inlabru","title":"Spatial and Spatio-Temporal Models using INLA","text":"Setting observation (likelihood) model object Define data model: linear predictor terms Fitting Summary model parameters Note: default prior intercept inlabru smaller variance default INLA, explains slight difference results.","code":"library(inlabru) data_model <- bru_obs(   formula = y ~ .,    family = \"gaussian\",   control.family = ctrl.lik,    data = dataf) linpred <- ~ 1 +     field(list(space = cbind(s1, s2),                 time = time),           model = stmodel) result <- bru(   components = linpred,   data_model) result$summary.fixed #>                mean       sd 0.025quant  0.5quant 0.975quant      mode #> Intercept 0.6690758 3.969868  -6.886579 0.5095548   9.213222 0.5379881 #>                    kld #> Intercept 5.712418e-05 result$summary.hyperpar #>                      mean        sd 0.025quant 0.5quant 0.975quant      mode #> Theta1 for field 1.190358 0.4867880   0.362423 1.153755   2.255714 0.9726899 #> Theta2 for field 1.435283 0.1709765   1.103480 1.433658   1.776675 1.4267684"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Earth_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to define the boundary Earch polygon in longlat projection for a given resolution. ‚Äî Earth_poly","title":"Function to define the boundary Earch polygon in longlat projection for a given resolution. ‚Äî Earth_poly","text":"Function define boundary Earch polygon longlat projection given resolution.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Earth_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to define the boundary Earch polygon in longlat projection for a given resolution. ‚Äî Earth_poly","text":"","code":"Earth_poly(resol = 300, crs = \"+proj=moll +units=km\")"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Earth_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to define the boundary Earch polygon in longlat projection for a given resolution. ‚Äî Earth_poly","text":"resol number subdivisions along latitude coordinates half number subdivisions along longitude coordinates. crs string projection. Default Mollweide projection units kilometers.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Earth_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to define the boundary Earch polygon in longlat projection for a given resolution. ‚Äî Earth_poly","text":"'st_sfc' object Earth polygon.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/INLAspacetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial and Spatio-Temporal Models using INLA ‚Äî INLAspacetime","title":"Spatial and Spatio-Temporal Models using INLA ‚Äî INLAspacetime","text":"package main purpose provide user friendly functions fit temporal, spatial space-time models using INLA software available www.r-inla.org well inlabru package available","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/INLAspacetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial and Spatio-Temporal Models using INLA ‚Äî INLAspacetime","text":"","code":"INLAspacetime()"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/INLAspacetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial and Spatio-Temporal Models using INLA ‚Äî INLAspacetime","text":"opens Vignettes directory browser","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"The 2nd order temporal matrices with boundary correction ‚Äî Jmatrices","title":"The 2nd order temporal matrices with boundary correction ‚Äî Jmatrices","text":"2nd order temporal matrices boundary correction","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The 2nd order temporal matrices with boundary correction ‚Äî Jmatrices","text":"","code":"Jmatrices(tmesh)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The 2nd order temporal matrices with boundary correction ‚Äî Jmatrices","text":"tmesh Temporal mesh","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The 2nd order temporal matrices with boundary correction ‚Äî Jmatrices","text":"return list temporal finite element method matrices supplied mesh.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The 2nd order temporal matrices with boundary correction ‚Äî Jmatrices","text":"Temporal GMRF representation stationary boundary conditions Appendix E Lindgren et. al. (2024).","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":null,"dir":"Reference","previous_headings":"","what":"To visualize time series over space. ‚Äî stlines","title":"To visualize time series over space. ‚Äî stlines","text":"visualize time series space.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To visualize time series over space. ‚Äî stlines","text":"","code":"stlines(   stdata,   spatial,   group = NULL,   nmax.group = NULL,   xscale = 1,   yscale = 1,   colour = NULL,   ... )  stpoints(   stdata,   spatial,   group = NULL,   nmax.group = NULL,   xscale = 1,   yscale = 1,   colour = NULL,   ... )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To visualize time series over space. ‚Äî stlines","text":"stdata matrix data, column location. spatial object one class defined sp package. group integer vector indicating spatial unit time series belongs . Default NULL assumed time series belongs o spatial unit. nmax.group integer indicating maximum number time series plotted spatial unit. Default NULL, drawn. xscale numeric define scaling factor horizontal direction. yscale numeric define scaling factor vertical direction. colour color (may vector, one time series). Default NULL generate colors considering average time series. automatic colors defined using rgb() function alpha=0.5. considers relative rank time series mean, r. r used red,  1-r used blue triangular function, 1-2*|1-r/2|, considered green. , time series mean among lowest time series averages shown blue among highest temperatures shown red. transition blue red goes intermediate ones shown light green. ... arguments passed lines function.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To visualize time series over space. ‚Äî stlines","text":"add lines existing plot","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"To visualize time series over space. ‚Äî stlines","text":"Scaling times series needed drawing map. area bounding box spatial object divided number locations standard scaling factor. multiplied user given xcale yscale.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"To visualize time series over space. ‚Äî stlines","text":"stlines(): time series map centered location. stpoints(): time series map centered location.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"To visualize time series over space. ‚Äî stlines","text":"many geographical locations, look good","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code to compute the covariance of the second order autoregression (AR2) model. ‚Äî ar2cov","title":"Illustrative code to compute the covariance of the second order autoregression (AR2) model. ‚Äî ar2cov","text":"Computes auto-covariance given coefficients.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code to compute the covariance of the second order autoregression (AR2) model. ‚Äî ar2cov","text":"","code":"ar2cov(a1, a2, k = 30, useC = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code to compute the covariance of the second order autoregression (AR2) model. ‚Äî ar2cov","text":"a1 first auto-regression coefficient. a2 second auto-regression coefficient. k maximum lag evaluating auto-correlation. useC just test (use C code).","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code to compute the covariance of the second order autoregression (AR2) model. ‚Äî ar2cov","text":"autocorrelation vector matrix, whenever a1 a2 scalar vector.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Illustrative code to compute the covariance of the second order autoregression (AR2) model. ‚Äî ar2cov","text":"Let second order auto-regression model defined x_t + a_1 x_{t-1} + a_2 x_{t-2} = w_t w_t ~ N(0, 1).","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Illustrative code to compute the covariance of the second order autoregression (AR2) model. ‚Äî ar2cov","text":"","code":"ar2cov(c(-1.7, -1.8), 0.963, k = 5) #>           [,1]      [,2]       [,3]        [,4]       [,5] #> [1,] 0.8660214 0.5092364 0.03172323 -0.43646514 -0.7725402 #> [2,] 0.9169638 0.6875349 0.35452664 -0.02394815 -0.3845158 plot(ar2cov(-1.7, 0.963), type = \"o\")"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Precision matrix for an AR2 model. ‚Äî ar2precision","title":"Precision matrix for an AR2 model. ‚Äî ar2precision","text":"Creates precision matrix sparse matrix object considering specification stated Details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precision matrix for an AR2 model. ‚Äî ar2precision","text":"","code":"ar2precision(n, a)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precision matrix for an AR2 model. ‚Äî ar2precision","text":"n size model. length three vector coefficients. See details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Precision matrix for an AR2 model. ‚Äî ar2precision","text":"precision matrix sparse matrix object edge correction.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Precision matrix for an AR2 model. ‚Äî ar2precision","text":"Let second order auto-regression model defined $$a_0 x_t + a_1 x_{t-1} + a_2 x_{t-2} = w_t, w_t ~ N(0, 1).$$ n times n symmetric precision matrix Q x_1, x_2, ..., x_n following non-zero elements: \\(Q_{1,1} = Q_{n,n} = a_0^2\\) \\(Q_{2,2} = Q_{n-1,n-1} = a_0^2 + a_1^2\\) \\(Q_{1,2} = Q_{2,1} = Q_{n-1,n} = Q_{n,n-1} = a_0 a_1\\) \\(Q_{t,t} = q_0 = a_0^2 + a_1^2 + a_2^2, t = 3, 4, ..., n-2\\) \\(Q_{t,t-1} = Q_{t-1,t} = q_1 = a_1(a_0 + a_2), t = 3, 4, ..., n-1\\) \\(Q_{t,t-2} = Q_{t-2,t} = q_2 = a_2 a_0, t = 3, 4, ..., n\\)","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precision matrix for an AR2 model. ‚Äî ar2precision","text":"","code":"ar2precision(7, c(1, -1.5, 0.9)) #> 7 x 7 sparse Matrix of class \"dsTMatrix\" #>                                              #> [1,]  1.0 -1.50  0.90  .     .     .     .   #> [2,] -1.5  3.25 -2.85  0.90  .     .     .   #> [3,]  0.9 -2.85  4.06 -2.85  0.90  .     .   #> [4,]  .    0.90 -2.85  4.06 -2.85  0.90  .   #> [5,]  .    .     0.90 -2.85  4.06 -2.85  0.9 #> [6,]  .    .     .     0.90 -2.85  3.25 -1.5 #> [7,]  .    .     .     .     0.90 -1.50  1.0"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a spacetime model object for the f() call. ‚Äî barrierModel.define","title":"Define a spacetime model object for the f() call. ‚Äî barrierModel.define","text":"Define spacetime model object f() call.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a spacetime model object for the f() call. ‚Äî barrierModel.define","text":"","code":"barrierModel.define(   mesh,   barrier.triangles,   prior.range,   prior.sigma,   range.fraction = 0.1,   constr = FALSE,   debug = FALSE,   useINLAprecomp = TRUE,   libpath = NULL )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a spacetime model object for the f() call. ‚Äî barrierModel.define","text":"mesh spatial mesh barrier.triangles integer vector specify triangles centers barrier domain, list integer vector one. prior.range numeric vector containing U define probability statements P(range < U) = used setup PC-prior range. = 0 = NA, U taken fixed value range. prior.sigma numeric vector containing U define probability statements P(range > U) = used setup PC-prior sigma. = 0 = NA, U taken fixed value sigma. range.fraction numeric specify fraction range barrier domain. Default value 0.1. specified care order small enough make act barrier small order prevent numerical issues. constr logical, default FALSE, indicate integral field domain constrained zero. debug integer, default zero, indicating verbose level. used logical INLA. useINLAprecomp logical, default TRUE, indicating used shared object pre-compiled INLA. considered 'libpath' provided. libpath string, default NULL, path shared object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a spacetime model object for the f() call. ‚Äî barrierModel.define","text":"objects used f() formula term INLA.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a spacetime model object for the f() call. ‚Äî barrierModel.define","text":"See paper.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/bru_get_mapper.stModel_cgeneric.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapper object for automatic inlabru interface ‚Äî bru_get_mapper.stModel_cgeneric","title":"Mapper object for automatic inlabru interface ‚Äî bru_get_mapper.stModel_cgeneric","text":"Return inlabru bru_mapper object can used computing model matrices space-time model components.  bru_get_mapper() function called inlabru methods automatically obtain needed mapper object (inlabru 2.7.0.9001; , use mapper = bru_get_mapper(model) explicitly).","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/bru_get_mapper.stModel_cgeneric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mapper object for automatic inlabru interface ‚Äî bru_get_mapper.stModel_cgeneric","text":"","code":"bru_get_mapper.stModel_cgeneric(model, ...)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/bru_get_mapper.stModel_cgeneric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mapper object for automatic inlabru interface ‚Äî bru_get_mapper.stModel_cgeneric","text":"model model object (class stModel_cgeneric, stModel.define barrierModel_cgeneric, barrierModel.define) ... Unused.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/bru_get_mapper.stModel_cgeneric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mapper object for automatic inlabru interface ‚Äî bru_get_mapper.stModel_cgeneric","text":"bru_mapper object class bru_mapper_multi sub-mappers space time based model smesh tmesh mesh objects.","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Whittle-Matern correlation function. ‚Äî cWhittleMatern","title":"Computes the Whittle-Matern correlation function. ‚Äî cWhittleMatern","text":"computes correlation function derived Matern model, see Matern (1960) eq. (2.4.7). nu=1, see Whittle (1954) eq. (68). limiting case nu=0, see Besag (1981) eq. (14-15).","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Whittle-Matern correlation function. ‚Äî cWhittleMatern","text":"","code":"cWhittleMatern(x, range, nu, kappa = sqrt(8 * nu)/range)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Whittle-Matern correlation function. ‚Äî cWhittleMatern","text":"x distance. range practical range (prefered parametrization) given range = sqrt(8 * nu) / kappa, kappa scale parameter specialized references. nu process smoothness parameter. kappa scale parameter, commonly considered specialized literature.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the Whittle-Matern correlation function. ‚Äî cWhittleMatern","text":"correlation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the Whittle-Matern correlation function. ‚Äî cWhittleMatern","text":"Whittle, P. (1954) Stationary Processes Plane. Biometrika, Vol. 41, . 3/4, pp. 434-449. http://www.jstor.org/stable/2332724 Matern, B. (1960) Spatial Variation: Stochastic models application problems forest surveys sampling investigations. PhD Thesis. Besag, J. (1981) System Two-Dimensional Recurrence Equations. JRSS-B, Vol. 43 . 3, pp. 302-309. https://www.jstor.org/stable/2984940","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the Whittle-Matern correlation function. ‚Äî cWhittleMatern","text":"","code":"plot(function(x) cWhittleMatern(x, 1, 5),   bty = \"n\", las = 1,   xlab = \"Distance\", ylab = \"Correlation\" ) plot(function(x) cWhittleMatern(x, 1, 1), add = TRUE, lty = 2) plot(function(x) cWhittleMatern(x, 1, 0.5), add = TRUE, lty = 3) abline(h = 0.139, lty = 3, col = gray(0.5, 0.5))"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cgeneric_sspde.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the stationary SPDE cgeneric model for INLA. ‚Äî cgeneric_sspde","title":"Define the stationary SPDE cgeneric model for INLA. ‚Äî cgeneric_sspde","text":"Define stationary SPDE cgeneric model INLA.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cgeneric_sspde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the stationary SPDE cgeneric model for INLA. ‚Äî cgeneric_sspde","text":"","code":"cgeneric_sspde(   mesh,   alpha,   control.priors,   constr = FALSE,   debug = FALSE,   useINLAprecomp = TRUE,   libpath = NULL )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cgeneric_sspde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the stationary SPDE cgeneric model for INLA. ‚Äî cgeneric_sspde","text":"mesh triangulation mesh discretize model. alpha integer used compute smoothness parameter. control.priors named list parameter priors. shall contain prange psigma one length two vector (U, ) define PC-prior parameters P(range<U)=P(sigma>U)=, respectively. See Fuglstad et. al. (2019) <DOI: 10.1080/01621459.2017.1415907>. =0 =NA, U taken fixed value parameter. constr logical, default FALSE, indicate integral field domain constrained zero. debug integer, default zero, indicating verbose level. used logical INLA. useINLAprecomp logical, default TRUE, indicating used shared object pre-compiled INLA. considered 'libpath' provided. libpath string, default NULL, path shared object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cgeneric_sspde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the stationary SPDE cgeneric model for INLA. ‚Äî cgeneric_sspde","text":"objects used f() formula term INLA.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cgeneric_sspde.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Define the stationary SPDE cgeneric model for INLA. ‚Äî cgeneric_sspde","text":"stationary case INLA::inla.spde2.pcmatern() slight change marginal variance domain sphere, following Eq. (23) Lindgren et. al. (2024).","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cgeneric_sspde.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Define the stationary SPDE cgeneric model for INLA. ‚Äî cgeneric_sspde","text":"Geir-Arne Fuglstad, Daniel Simpson, Finn Lindgren & H√•vard Rue (2019). Constructing Priors Penalize Complexity Gaussian Random Fields. Journal American Statistical Association, V. 114, Issue 525. Finn Lindgren, Haakon Bakka, David Bolin, Elias Krainski H√•vard Rue (2024). diffusion-based spatio-temporal extension Gaussian Mat√©rn fields. SORT vol.  48, . 1, pp. 3-66 <doi: 10.57645/20.8080.02.13>","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/check_package_version_and_load.html","id":null,"dir":"Reference","previous_headings":"","what":"check package version and load ‚Äî check_package_version_and_load","title":"check package version and load ‚Äî check_package_version_and_load","text":"check package version load","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/check_package_version_and_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check package version and load ‚Äî check_package_version_and_load","text":"","code":"check_package_version_and_load(pkg, minimum_version, quietly = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/check_package_version_and_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check package version and load ‚Äî check_package_version_and_load","text":"pkg character name package minimum_version character minimum required version quietly logical indicating messages shall printed","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/check_package_version_and_load.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"check package version and load ‚Äî check_package_version_and_load","text":"code inlabru package","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/downloadUtilFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Download files from the NOAA's GHCN daily data ‚Äî downloadUtilFiles","title":"Download files from the NOAA's GHCN daily data ‚Äî downloadUtilFiles","text":"Download files NOAA's GHCN daily data","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/downloadUtilFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download files from the NOAA's GHCN daily data ‚Äî downloadUtilFiles","text":"","code":"downloadUtilFiles(data.dir, year = 2022, force = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/downloadUtilFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download files from the NOAA's GHCN daily data ‚Äî downloadUtilFiles","text":"data.dir folder store files. year year daily weather data. force logical indicating force download. FALSE file downloaded exists locally yet.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/downloadUtilFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download files from the NOAA's GHCN daily data ‚Äî downloadUtilFiles","text":"named character vector local file names: daily.data, stations., elevation.","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Select data from the daily dataset ‚Äî ghcndSelect","title":"Select data from the daily dataset ‚Äî ghcndSelect","text":"Select data daily dataset","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select data from the daily dataset ‚Äî ghcndSelect","text":"","code":"ghcndSelect(   gzfile,   variable = c(\"TMIN\", \"TAVG\", \"TMAX\"),   station = NULL,   qflag = \"\",   verbose = TRUE,   astype = as.integer )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select data from the daily dataset ‚Äî ghcndSelect","text":"gzfile local filename daily data file file. E.g. 2023.csv.gz daily GHCN data repository NCEI-NOAA, \"https://www.ncei.noaa.gov/pub/data/ghcn/daily/by_year/\". Please see references bellow. variable string variable name(s) selected station string (vector) station(s) selected qflag string quality control flag(s) verbose logical indicating progress printed astype function convert data class, default set convert data integer.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select data from the daily dataset ‚Äî ghcndSelect","text":"one variable, returns array whose dimentions days, stations, variables. one variable, returns matrix whose dimentions days, stations.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select data from the daily dataset ‚Äî ghcndSelect","text":"default selects TMIN, TAVG TMAX return integer original data also integer units 10 Celcius degrees.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Select data from the daily dataset ‚Äî ghcndSelect","text":"can take time execute , example, data.table package available.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select data from the daily dataset ‚Äî ghcndSelect","text":"Menne, M., Durre, ., Vose, R., Gleason, B. Houston, T. (2012) overview global historical climatology network-daily database. Journal Atmospheric Oceanic Technology, 897‚Äì910.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh.dual.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts the dual of a mesh object. ‚Äî mesh.dual","title":"Extracts the dual of a mesh object. ‚Äî mesh.dual","text":"Extracts dual mesh object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh.dual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts the dual of a mesh object. ‚Äî mesh.dual","text":"","code":"mesh.dual(   mesh,   returnclass = c(\"list\", \"sf\", \"sv\", \"SP\"),   mc.cores = getOption(\"mc.cores\", 2L) )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh.dual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts the dual of a mesh object. ‚Äî mesh.dual","text":"mesh 2d mesh object. returnclass 'list' return list polygon coordinates, \"sf\" return 'sf' sfc_multipolygon object, \"sv\" return 'terra', SpatVector object, \"SP\" return 'sp' SpatialPolygons object. mc.cores number threads used.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh.dual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts the dual of a mesh object. ‚Äî mesh.dual","text":"one three 'returnclass'","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code for building a mesh in 2d domain. ‚Äî mesh2d","title":"Illustrative code for building a mesh in 2d domain. ‚Äî mesh2d","text":"Creates mesh object. just test code. efficient, reliable general code use fmesher package.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code for building a mesh in 2d domain. ‚Äî mesh2d","text":"","code":"mesh2d(loc, domain, max.edge, offset, SP = TRUE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code for building a mesh in 2d domain. ‚Äî mesh2d","text":"loc two column matrix location coordinates. domain two column matrix defining domain. max.edge maximum edge length. offset length outer extension. SP logical indicating output include SpatialPolygons.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code for building a mesh in 2d domain. ‚Äî mesh2d","text":"mesh object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Illustrative code for building a mesh in 2d domain. ‚Äî mesh2d","text":"just illustration purposes one consider efficient function fmesher::fm_mesh_2d() (related functions) available fmesher package.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2fem.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code for Finite Element matrices of a mesh in 2d domain. ‚Äî mesh2fem","title":"Illustrative code for Finite Element matrices of a mesh in 2d domain. ‚Äî mesh2fem","text":"Illustrative code Finite Element matrices mesh 2d domain. Illustrative code Finite Element matrices triangles barrier domain.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2fem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code for Finite Element matrices of a mesh in 2d domain. ‚Äî mesh2fem","text":"","code":"mesh2fem(mesh, order = 2, barrier.triangles = NULL)  mesh2fem.barrier(mesh, barrier.triangles = NULL)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2fem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code for Finite Element matrices of a mesh in 2d domain. ‚Äî mesh2fem","text":"mesh 2d mesh object. order desired order. barrier.triangles integer index specify triangles barrier domain","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2fem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code for Finite Element matrices of a mesh in 2d domain. ‚Äî mesh2fem","text":"list object containing FE matrices. list object containing FE matrices barrier problem.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code to build the projector matrix for SPDE models. ‚Äî mesh2projector","title":"Illustrative code to build the projector matrix for SPDE models. ‚Äî mesh2projector","text":"Creates projector matrix object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code to build the projector matrix for SPDE models. ‚Äî mesh2projector","text":"","code":"mesh2projector(   mesh,   loc = NULL,   lattice = NULL,   xlim = NULL,   ylim = NULL,   dims = c(100, 100) )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code to build the projector matrix for SPDE models. ‚Äî mesh2projector","text":"mesh 2d mesh object. loc two columns matrix locations project . lattice Unused; feature supported illustration. xlim, ylim vector boundary limits. dims number subdivisions boundary limits.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code to build the projector matrix for SPDE models. ‚Äî mesh2projector","text":"projector matrix list sparse matrix object x$proj$..","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Illustrative code to build the projector matrix for SPDE models. ‚Äî mesh2projector","text":"just illustration purpose one consider efficient functions available fmesher package, e.g. fmesher::fm_evaluator() fmesher::fm_basis().","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/outDetect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect outliers in a time series considering the raw data and a smoothed version of it. ‚Äî outDetect","title":"Detect outliers in a time series considering the raw data and a smoothed version of it. ‚Äî outDetect","text":"Detect outliers time series considering raw data smoothed version .","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/outDetect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect outliers in a time series considering the raw data and a smoothed version of it. ‚Äî outDetect","text":"","code":"outDetect(x, weights = NULL, ff = c(7, 7))"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/outDetect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect outliers in a time series considering the raw data and a smoothed version of it. ‚Äî outDetect","text":"x numeric vector weights non-increasing numeric vector used weights computing smoothed vector rooling window average. Default null \\(w_j\\) proportional j equation Details . ff numeric length two vector factors used consider many times standard deviation one data point considered outlier.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/outDetect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect outliers in a time series considering the raw data and a smoothed version of it. ‚Äî outDetect","text":"logical vector indicating data outlier attributes detailed bellow. attr(, 'm') mean x. attr(, 's') standard devation x. attr(, 'ss') standard deviation smoothed data \\(y_t\\) defined \\(y_t = \\sum_{k=j}^h w_j * (x_{t-j}+x_{t+j})/2\\) s ss used define outliers \\(|x_t-m|/s>ff_1\\) \\(|x_t-y_t|/ss>ff_2\\) attr(, 'xs') smoothed time series \\(y_t\\)","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to help converting from/to user/internal parametrization. The internal parameters are 'gamma_s, 'gamma_t', 'gamma_E' The user parameters are 'r_s', 'r_t', 'sigma' ‚Äî paramsUtils","title":"Functions to help converting from/to user/internal parametrization. The internal parameters are 'gamma_s, 'gamma_t', 'gamma_E' The user parameters are 'r_s', 'r_t', 'sigma' ‚Äî paramsUtils","text":"Functions help converting /user/internal parametrization. internal parameters 'gamma_s, 'gamma_t', 'gamma_E' user parameters 'r_s', 'r_t', 'sigma' Convert user parameters SPDE parameters Convert SPDE parameters user parameters","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to help converting from/to user/internal parametrization. The internal parameters are 'gamma_s, 'gamma_t', 'gamma_E' The user parameters are 'r_s', 'r_t', 'sigma' ‚Äî paramsUtils","text":"","code":"lgsConstant(lg.s, alpha, smanifold)  params2gammas(   lparams,   alpha.t,   alpha.s,   alpha.e,   smanifold = \"R2\",   verbose = FALSE )  gammas2params(lgammas, alpha.t, alpha.s, alpha.e, smanifold = \"R2\")"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to help converting from/to user/internal parametrization. The internal parameters are 'gamma_s, 'gamma_t', 'gamma_E' The user parameters are 'r_s', 'r_t', 'sigma' ‚Äî paramsUtils","text":"lg.s logarithm SPDE parameter \\gamma_s alpha resulting spatial order. smanifold spatial domain manifold, \"S1\", \"S2\", \"R1\", \"R2\" \"R3\". lparams log(spatial range, temporal range, sigma) alpha.t temporal order SPDE alpha.s spatial order spatial differential operator non-separable part. alpha.e spatial order spatial differential operator separable part. verbose logical print internal variables lgammas numeric length 3 \\(log(\\gamma_k)\\) model parameters. parameter order log(gamma.s, gamma.t, gamma.e)","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to help converting from/to user/internal parametrization. The internal parameters are 'gamma_s, 'gamma_t', 'gamma_E' The user parameters are 'r_s', 'r_t', 'sigma' ‚Äî paramsUtils","text":"part sigma spatial constant \\gamma_s. log(gamma.s, gamma.t, gamma.e) log(spatial range, temporal range, sigma)","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to help converting from/to user/internal parametrization. The internal parameters are 'gamma_s, 'gamma_t', 'gamma_E' The user parameters are 'r_s', 'r_t', 'sigma' ‚Äî paramsUtils","text":"See equation (23) paper. See equations (19), (20) (21) paper. See equations (19), (20) (21) paper.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to help converting from/to user/internal parametrization. The internal parameters are 'gamma_s, 'gamma_t', 'gamma_E' The user parameters are 'r_s', 'r_t', 'sigma' ‚Äî paramsUtils","text":"","code":"params2gammas(log(c(1, 1, 1)), 1, 2, 1, \"R2\") #>   gamma.s   gamma.t   gamma.e  #>  1.039721  1.386294 -3.344954  gammas2params(log(c(0, 0, 0)), 1, 2, 1, \"R2\") #>    lrs    lrt lsigma  #>    Inf    NaN    Inf"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal util functions for polygon properties. ‚Äî Heron","title":"Internal util functions for polygon properties. ‚Äî Heron","text":"computes area triangle given three coordinates.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal util functions for polygon properties. ‚Äî Heron","text":"","code":"Heron(x, y)  Area(x, y)  s2trArea(tr, R = 1)  flatArea(tr)  Stiffness(tr)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal util functions for polygon properties. ‚Äî Heron","text":"x, y coordinate vectors. tr triangle coordinates R radius spherical domain","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal util functions for polygon properties. ‚Äî Heron","text":"area 2d triangle area 2d polygon area triangle S2 area triangle stiffness matrix triangle","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal util functions for polygon properties. ‚Äî Heron","text":"Function used internally compute area triangle.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Internal util functions for polygon properties. ‚Äî Heron","text":"Internal functions, exported.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code to build the precision matrix for SPDE kind models. ‚Äî spde2precision","title":"Illustrative code to build the precision matrix for SPDE kind models. ‚Äî spde2precision","text":"Creates precision matrix sparse matrix object. general code look functions INLA package.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code to build the precision matrix for SPDE kind models. ‚Äî spde2precision","text":"","code":"spde2precision(kappa, fem, alpha)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code to build the precision matrix for SPDE kind models. ‚Äî spde2precision","text":"kappa scale parameter. fem list containing Finite Element matrices. alpha smoothness parameter.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code to build the precision matrix for SPDE kind models. ‚Äî spde2precision","text":"precision matrix sparse matrix object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Illustrative code to build the precision matrix for SPDE kind models. ‚Äî spde2precision","text":"just illustration purpose one consider efficient function available INLA package.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a spacetime model object for the f() call. ‚Äî stModel.define","title":"Define a spacetime model object for the f() call. ‚Äî stModel.define","text":"Define spacetime model object f() call.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a spacetime model object for the f() call. ‚Äî stModel.define","text":"","code":"stModel.define(   smesh,   tmesh,   model,   control.priors,   constr = FALSE,   debug = FALSE,   useINLAprecomp = TRUE,   libpath = NULL )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a spacetime model object for the f() call. ‚Äî stModel.define","text":"smesh spatial mesh tmesh temporal mesh model three characters string specify smoothness alpha (one integer) parameters. Currently considers 102, 121, 202 220 models. control.priors named list parameter priors, named prs, prt psigma, one vector length two containing (U, ) define corresponding PC-prior , respectively, P(range.spatial<U)=, P(range.temporal<U)=P(sigma>U)=. =0 =NA, U taken fixed value parameter. constr logical, default FALSE, indicate integral field domain constrained zero. debug integer, default zero, indicating verbose level. used logical INLA. useINLAprecomp logical, default TRUE, indicating used shared object pre-compiled INLA. considered 'libpath' provided. libpath string, default NULL, path shared object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a spacetime model object for the f() call. ‚Äî stModel.define","text":"objects used f() formula term INLA.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a spacetime model object for the f() call. ‚Äî stModel.define","text":"function compute matrices computing precision matrix. one Kronecker products Theorem 4.1 Lindgren et. al. (2024) computed stModel.matrices parameters Eq (19-21). use log parameters internally.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Define a spacetime model object for the f() call. ‚Äî stModel.define","text":"Finn Lindgren, Haakon Bakka, David Bolin, Elias Krainski H√•vard Rue (2024). diffusion-based spatio-temporal extension Gaussian Mat√©rn fields. SORT vol.  48, . 1, pp. 3-66 <doi: 10.57645/20.8080.02.13>","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the spacetime model matrices. ‚Äî stModel.matrices","title":"Define the spacetime model matrices. ‚Äî stModel.matrices","text":"function computes matrices needed build precision matrix spatio-temporal model, Lindgren et. al. (2024)","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the spacetime model matrices. ‚Äî stModel.matrices","text":"","code":"stModel.matrices(smesh, tmesh, model, constr = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the spacetime model matrices. ‚Äî stModel.matrices","text":"smesh mesh object spatial domain. tmesh mesh object time domain. model string identifying model. far following models: '102', '121', '202' '220' models. constr logical indicate integral field domain constrained zero. Default value FALSE.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the spacetime model matrices. ‚Äî stModel.matrices","text":"list containing needed objects model definition. 'manifold' spedify string model identification length three vector constants c1, c2 c3 vector d matrix T model matrices M_1, ..., M_m","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the spacetime model matrices. ‚Äî stModel.matrices","text":"See paper details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Spacetime precision matrix. ‚Äî stModel.precision","title":"Spacetime precision matrix. ‚Äî stModel.precision","text":"build precision matrix spacetime model given temporal spatial meshes.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spacetime precision matrix. ‚Äî stModel.precision","text":"","code":"stModel.precision(smesh, tmesh, model, theta, verbose = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spacetime precision matrix. ‚Äî stModel.precision","text":"smesh mesh object spatial domain. tmesh mesh object time domain. model string identifying model. far following models: '102', '121', '202' '220' models. theta numeric vector length three \\(log(gamma_s, gamma_t, gamma_e)\\). verbose logical print intermediate objects.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spacetime precision matrix. ‚Äî stModel.precision","text":"(sparse) precision matrix, Lindgren et. al. (2024)","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":null,"dir":"Reference","previous_headings":"","what":"To retrieve goodness of fit statistics for a specific model class. ‚Äî stats.inla","title":"To retrieve goodness of fit statistics for a specific model class. ‚Äî stats.inla","text":"Extracts dic, waic log-cpo output returned inla function INLA package bru function inlabru package, computes log-po, mse, mae, crps scrps given input. summary applied considering user imputed function, default mean.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To retrieve goodness of fit statistics for a specific model class. ‚Äî stats.inla","text":"","code":"stats.inla(m, i = NULL, y, fsummarize = mean)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To retrieve goodness of fit statistics for a specific model class. ‚Äî stats.inla","text":"m inla output object. index subset estimated values. y observed compare . fsummarize summary function, default base::mean().","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To retrieve goodness of fit statistics for a specific model class. ‚Äî stats.inla","text":"named numeric vector extracted statistics.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"To retrieve goodness of fit statistics for a specific model class. ‚Äî stats.inla","text":"assumes Gaussian posterior predictive distributions! Considering defaults, n observations, \\(y_i, = 1, 2, ..., n\\), . dic $$\\sum_i d_i/n$$ \\(d_i\\) dic computed observation . . waic $$\\sum_i w_i/n$$ \\(w_i\\) waic computed observation . . lcpo $$-\\sum_i \\log(p_i)/n$$ \\(p_i\\) cpo computed observation . log-po, crps, scrps scores assumes Gaussian predictive distribution observation \\(y_i\\) following definitions: \\(z_i = (y_i-\\mu_i)/\\sigma_i\\), \\(\\mu_i\\) posterior mean linear predictor, \\(\\sigma_i = \\sqrt{v_i + 1/\\tau_y}\\), \\(\\tau_y\\) observation posterior mean, \\(v_i\\) posterior variance linear predictor \\(y_i\\). consider \\(\\phi()\\) density standard Gaussian variable \\(\\psi()\\) corresponding Cumulative Probability Distribution. . lpo $$-\\sum_i \\log(\\phi(z_i))/n$$ . crps $$\\sum_i r_i/n$$ $$r_i=\\sigma_i/\\sqrt{\\pi} - 2\\sigma_i\\phi(z_i) + (y_i-\\mu_i)(1-2\\psi(z_i))$$ . scrps $$\\sum_i s_i/n$$ $$s_i=-\\log(2\\sigma_i/\\sqrt{\\pi})/2 -\\sqrt{\\pi}(\\phi(z_i)-\\sigma_iz_i/2+z_i\\psi(z_i))$$","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"To retrieve goodness of fit statistics for a specific model class. ‚Äî stats.inla","text":"scores negatively oriented means smaller scores better.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"To retrieve goodness of fit statistics for a specific model class. ‚Äî stats.inla","text":"Held, L. Schr√∂dle, B. Rue, H. (2009). Posterior Cross-validatory Predictive Checks: Comparison MCMC INLA. Statistical Modelling Regression Structures pp 91‚Äì110. https://link.springer.com/chapter/10.1007/978-3-7908-2413-1_6. Bolin, D. Wallin, J. (2022) Local scale invariance robustness proper scoring rules. Statistical Science. doi:10.1214/22-STS864 .","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stdSubs.html","id":null,"dir":"Reference","previous_headings":"","what":"To check unusual low/high variance segments ‚Äî stdSubs","title":"To check unusual low/high variance segments ‚Äî stdSubs","text":"check unusual low/high variance segments","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stdSubs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To check unusual low/high variance segments ‚Äî stdSubs","text":"","code":"stdSubs(x, nsub = 12, fs = 15)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stdSubs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To check unusual low/high variance segments ‚Äî stdSubs","text":"x numeric vector nsub number segments length fs numeric use detecting hight low local standard deviations.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stdSubs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To check unusual low/high variance segments ‚Äî stdSubs","text":"logical indicating st fs times lower/higher average st, returned attribute: attr(, 'st') numeric vector standard deviation segment data.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a matrix or a list of matrices for use in some 'cgeneric' code. ‚Äî upperPadding","title":"Prepare a matrix or a list of matrices for use in some 'cgeneric' code. ‚Äî upperPadding","text":"Define graph union supplied matrices return row ordered diagonal plus upper triangle padding zeroes one returned matrices pattern.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a matrix or a list of matrices for use in some 'cgeneric' code. ‚Äî upperPadding","text":"","code":"upperPadding(M, relative = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a matrix or a list of matrices for use in some 'cgeneric' code. ‚Äî upperPadding","text":"M matrix list matrices relative logical. list matrices supplied, indicates returned relative index value matrix. See details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a matrix or a list of matrices for use in some 'cgeneric' code. ‚Äî upperPadding","text":"unique matrix given, return upper triangle considering 'T' representation Matrix package. list matrices given, return list two elements: 'graph' 'xx'. 'graph' union graph matrix. relative=FALSE, 'xx' matrix number column equals number matrices imputed. relative=TRUE, list length equal number matrices imputed. See details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare a matrix or a list of matrices for use in some 'cgeneric' code. ‚Äî upperPadding","text":"relative=FALSE, columns 'xx' elements corresponding matrix padded fill pattern union graph. relative=TRUE, element 'xx' list relative index, 'r', non-zero elements matrix returned relative union graph, non-lower elements, 'x', corresponding matrix, vector, 'o', number non-zero elements line resulting matrix.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a matrix or a list of matrices for use in some 'cgeneric' code. ‚Äî upperPadding","text":"","code":"A <- sparseMatrix(   i = c(1, 1, 2, 3, 3, 5),   j = c(2, 5, 3, 4, 5, 5),   x = -(0:5), symmetric = TRUE ) A #> 5 x 5 sparse Matrix of class \"dsCMatrix\" #>                     #> [1,]  .  0  .  . -1 #> [2,]  0  . -2  .  . #> [3,]  . -2  . -3 -4 #> [4,]  .  . -3  .  . #> [5,] -1  . -4  . -5 upperPadding(A) #> 5 x 5 sparse Matrix of class \"dgTMatrix\" #>                   #> [1,] . .  .  . -1 #> [2,] . . -2  .  . #> [3,] . .  . -3 -4 #> [4,] . .  .  .  . #> [5,] . .  .  . -5 B <- Diagonal(nrow(A), -colSums(A)) list(a = A, a = B) #> $a #> 5 x 5 sparse Matrix of class \"dsCMatrix\" #>                     #> [1,]  .  0  .  . -1 #> [2,]  0  . -2  .  . #> [3,]  . -2  . -3 -4 #> [4,]  .  . -3  .  . #> [5,] -1  . -4  . -5 #>  #> $a #> 5 x 5 diagonal matrix of class \"ddiMatrix\" #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    .    .    .    . #> [2,]    .    2    .    .    . #> [3,]    .    .    9    .    . #> [4,]    .    .    .    3    . #> [5,]    .    .    .    .   10 #>  upperPadding(list(a = A, b = B)) #> $graph #> 5 x 5 sparse Matrix of class \"dgTMatrix\" #>                #> [1,] 1 . . . 1 #> [2,] . 1 1 . . #> [3,] . . 1 1 1 #> [4,] . . . 1 . #> [5,] . . . . 1 #>  #> $xx #>        a  b #>  [1,]  0  1 #>  [2,] -1  0 #>  [3,]  0  2 #>  [4,] -2  0 #>  [5,]  0  9 #>  [6,] -3  0 #>  [7,] -4  0 #>  [8,]  0  3 #>  [9,] -5 10 #>  upperPadding(list(a = A, b = B), relative = TRUE) #> $graph #> 5 x 5 sparse Matrix of class \"dgTMatrix\" #>                #> [1,] 1 . . . 1 #> [2,] . 1 1 . . #> [3,] . . 1 1 1 #> [4,] . . . 1 . #> [5,] . . . . 1 #>  #> $xx #> $xx$a #> $xx$a$r #> [1] 2 4 6 7 9 #>  #> $xx$a$x #> [1] -1 -2 -3 -4 -5 #>  #>  #> $xx$b #> $xx$b$r #> [1] 1 3 5 8 9 #>  #> $xx$b$x #> [1]  1  2  9  3 10 #>  #>  #>"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions to retrieve the world map, a world polygon, and create grid centers. ‚Äî worldMap","title":"Helper functions to retrieve the world map, a world polygon, and create grid centers. ‚Äî worldMap","text":"Retrieve map countries","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions to retrieve the world map, a world polygon, and create grid centers. ‚Äî worldMap","text":"","code":"worldMap(   crs = \"+proj=moll +units=km\",   scale = \"medium\",   returnclass = c(\"sf\", \"sv\") )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions to retrieve the world map, a world polygon, and create grid centers. ‚Äî worldMap","text":"crs string projection. Default Mollweide projection units kilometers. scale scale map return. Please see help 'ne_countries' function 'rnaturalearth' package. returnclass string determining class spatial object return. Please see help 'ne_countries' function 'rnaturalearth' package.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Helper functions to retrieve the world map, a world polygon, and create grid centers. ‚Äî worldMap","text":"land ocean maps obtained 'rnaturalearth' package.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/world_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a regular grid in 'Mollweide' projection, with units in kilometers. ‚Äî world_grid","title":"Define a regular grid in 'Mollweide' projection, with units in kilometers. ‚Äî world_grid","text":"Define regular grid 'Mollweide' projection, units kilometers.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/world_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a regular grid in 'Mollweide' projection, with units in kilometers. ‚Äî world_grid","text":"","code":"world_grid(size = 50, domain)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/world_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a regular grid in 'Mollweide' projection, with units in kilometers. ‚Äî world_grid","text":"size (kilometers) grid cells. domain provided sf sfc object. case, grid cells centers falling inside retrieved.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/world_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a regular grid in 'Mollweide' projection, with units in kilometers. ‚Äî world_grid","text":"'sf' points object centers grid set within Earth (supplied domain)","code":""}]
