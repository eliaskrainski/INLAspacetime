[{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"abstract","dir":"Articles > Web","previous_headings":"","what":"Abstract","title":"A barrier model illustration","text":"tutorial illustrate new implementation model proposed Bakka et al. (2019). consider problem modeling spatial domain accounting physical barriers. original implementation illustrated tutorial. re-implementation consider new (faster) computational method available INLA package. See details end vignette update old working code use new implementation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"introduction","dir":"Articles > Web","previous_headings":"","what":"Introduction","title":"A barrier model illustration","text":"Suppose phenomena varies spatial domain. Models usually consider correlation observations made. Considering pair observations, correlation usually specified function distance location sites observations collected. barrier spatial domain, correlation pair observations taken sites different sides barrier shall consider barrier. resume, longer just function distance. Basically, correlation points two different sides barrier decay faster (usual) zero “cross domain”. order illustrate problem, let us define rectangle spatial domain: now set barrier two polygons defined follows Define objects using package: can visualize polygons order make problem clear:  problem model data sides barrier considering correlation account barrier. proposed method Bakka et al. (2019) models entire domain, including barrier. deal barrier, correlation range set reasonable shorter barrier domain one domain interest. idea simple add parameter usual stationary model. Furthermore, can implemented inferential method. Bakka et al. (2019), proposed method consider Stochastic Partial Differential Equations - SPDE approach proposed Lindgren, Rue, Lindström (2011). implementation illustrated tutorial deals discretization domain. discretization considered care. fraction fixed analysis interplay width barrier. One choose small enough fraction, see details Bakka et al. (2019). first load packages used tutorial.","code":"rxy <- c(10, 6) r <- mean(rxy) bb <- rbind(     c(0, 1)*rxy[1],     c(0, 1)*rxy[2]) domain.xy <- cbind(     c(0, 1, 1, 0, 0) * rxy[1],     c(0, 0, 1, 1, 0) * rxy[2]) barrier1 <- cbind(   cos(seq(0, 2*pi, length=50)) * 0.7 + 0.50 * rxy[1],    sin(seq(0, 2*pi, length=50)) * 1.0 + 0.75 * rxy[2]) barrier2 <- cbind(   c(0.50, 1.50, 1.50, 0.50, 0.50) * rxy[1],   c(0.33, 0.33, 0.40, 0.40, 0.33) * rxy[2]) library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE domain <- st_sfc(st_polygon(list(domain.xy))) barriers <- st_sfc(st_multipolygon(   list(st_polygon(list(barrier1)),         st_polygon(list(barrier2))))) library(ggplot2) gg0 <- ggplot() +    xlab(\"\") + ylab(\"\") +   theme_minimal() + coord_fixed() gg0 + xlim(bb[1, ]) +   geom_sf(data = domain, fill = \"blue\") +   geom_sf(data = barriers, fill = \"gray\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. library(INLA) #> Loading required package: Matrix #> Loading required package: sp #> The legacy packages maptools, rgdal, and rgeos, underpinning this package #> will retire shortly. Please refer to R-spatial evolution reports on #> https://r-spatial.org/r/2023/05/15/evolution4.html for details. #> This package is now running under evolution status 0 #> This is INLA_23.06.15 built 2023-06-15 06:01:53 UTC. #>  - See www.r-inla.org/contact-us for how to get help. library(INLAspacetime) library(inlabru) library(patchwork)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"model-definition-and-discretization","dir":"Articles > Web","previous_headings":"","what":"Model definition and discretization","title":"A barrier model illustration","text":"Let us consider underlying random field specified domain. random field discretized using mesh precision matrix defined distribution mesh nodes. define barrier model proposed Bakka et al. (2019) make use triangulation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"mesh-and-triangles","dir":"Articles > Web","previous_headings":"","what":"Mesh and triangles","title":"A barrier model illustration","text":"solution consider discretization spatial domain simplest one using triangles. Therefore start following mesh made small triangles domain bigger around . solution needs triangles inside barrier domain identified. triangle center check inside barrier domain create vector identify domain triangle center inside can visualize mesh color triangle centers using ggplot methods inlabru package  Notice mesh goes beyond domain area including boundary extension. also defined barrier also defined boundary. Therefore, building model discretization, barrier well defined behavior process intended.","code":"mesh <- inla.mesh.2d(     loc.domain = domain.xy,      max.edge = c(0.03, 0.1) * r,     offset = c(0.1, 0.3) * r,     cutoff = 0.01 * r) mesh$n #> [1] 4364 triBarrier <- unlist(fm_contains(   x = barriers,    y = mesh,    type = \"centroid\")) triCenters.xy <- cbind(   mesh$loc[mesh$graph$tv[,1], 1:2] +   mesh$loc[mesh$graph$tv[,2], 1:2] +   mesh$loc[mesh$graph$tv[,3], 1:2])/3 gg0 +      gg(mesh) +     geom_point(aes(         x = triCenters.xy[triBarrier, 1],         y = triCenters.xy[triBarrier, 2]))"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"precision-matrix","dir":"Articles > Web","previous_headings":"Mesh and triangles","what":"Precision matrix","title":"A barrier model illustration","text":"parameters model range marginal variance, also define range parameter barrier method works. consider range barrier fraction range domain. just use half average rectangle edges range domain 10% barrier. now compute Finite Element matrices needed model discretization, detailed Bakka et al. (2019). now build precision matrix ","code":"sigma <- 1 (ranges <- r * c(0.5, 0.05))  #> [1] 4.0 0.4 bfem <- mesh2fem.barrier(mesh, triBarrier) Q <- inla.barrier.q(bfem, ranges = ranges, sigma = sigma)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"correlation","dir":"Articles > Web","previous_headings":"Mesh and triangles","what":"Correlation","title":"A barrier model illustration","text":"can use discretized model compute correlation pairs points order check properties model. Let us define function computes correlation given set location mesh node location. Consider set locations compute correlations correlation mesh node specified locations. like visualize image correlation location “everywhere”. Let us build projector project vector mesh nodes fine grid projected can now create data.frame expanded coordinates pixels correlations can projected prepared plotting order help visualization correlations, dropped pixels small correlations, less \\(0.1\\). can now visualize images  Notice model also defined barrier domain. Therefore can computations barrier. visualized correlation barriers well, added barrier borders, can see action short spatial range barriers. visual inspection helps verify short range barrier domain set small enough.","code":"localCorrel <- function(locs, mesh, Q) {   nl <- nrow(locs)   ii <- sapply(1:nl, function(i)     which.min(rowSums(sweep(       mesh$loc[, 1:ncol(locs)], 2, locs[i, ], \"-\")^2)))   b <- matrix(0, nrow(Q), nl)   for(i in 1:nl)     b[ii[i], i] <- 1   cc <- inla.qsolve(Q, b)   s <- sqrt(diag(inla.qinv(Q)))   for(i in 1:nl)     cc[, i] <- cc[, i] / (s * s[ii[i]])   return(drop(cc)) } locs <- cbind(c(0.4, 0.6, 0.7, 0.5) * rxy[1],                c(0.7, 0.6, 0.3, 0.5) * rxy[2]) mcorrels <- localCorrel(locs, mesh, Q) dim(mcorrels)  #> [1] 4364    4 pgrid <- inla.mesh.projector(     mesh,     xlim = bb[1, ],     ylim = bb[2, ],     dims = round(500 * rxy/r))  gcorrels <- as.matrix(inla.mesh.project(   pgrid, field = mcorrels )) grid.df <- data.frame(   x = rep(pgrid$x, times = length(pgrid$y)),    y = rep(pgrid$y, each = length(pgrid$x))) ggcorrels <- do.call(   rbind,    lapply(1:4, function(l)      data.frame(grid.df,                 loc = paste(sprintf(\"%1.1f\", locs[l, 1]),                             sprintf(\"%1.1f\", locs[l, 2]), sep = \", \"),                 correlation = gcorrels[, l]))) gg0 +    geom_raster(     data = ggcorrels[ggcorrels$correlation>0.1, ],      mapping = aes(x = x, y = y, fill = correlation)) +    facet_wrap(~ loc) +    add.b0 + gg.add ## look to the appendix for the code for this"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"data-simulation","dir":"Articles > Web","previous_headings":"","what":"Data simulation","title":"A barrier model illustration","text":"consider random field observed noise. first sample random field distribution.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"a-random-field-sample","dir":"Articles > Web","previous_headings":"Data simulation","what":"A random field sample","title":"A barrier model illustration","text":"several algorithms sample random field specified continuous domain without barriers. use already defined precision matrix draw sample mesh nodes values sampled mesh nodes can projected set small pixels visualization purpose can now visualize projected simulated values small pixels, inclusive values barriers.  visualization simulated process barrier allows visual inspection model property. process different sides barriers seen independent, illustrated correlation plots.","code":"u <- inla.qsample(1, Q, seed = 1)[,1] #> Warning in inla.qsample(1, Q, seed = 1): Since 'seed!=0', parallel model is #> disabled and serial model is selected ugrid.sim <- inla.mesh.project(pgrid, field = u) grid.df$u <- as.vector(ugrid.sim) gg0 +    geom_raster(     data = grid.df,      aes(x = x, y = y, fill = u)) +    add.b0 + gg.add ## look to the appendix for the code for this"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"sampling-a-set-of-observations","dir":"Articles > Web","previous_headings":"Data simulation","what":"Sampling a set of observations","title":"A barrier model illustration","text":"define initial set locations consider observe field locations. start set locations chosen completely random rectangle domain, including barrier part check inside barrier locations form data consider locations desired domain outside barrier simulate outcome, project field locations, add intercept random noise","code":"n0 <- 500 set.seed(2) xy0 <- cbind(   runif(n0, bb[1, 1], bb[1, 2]),   runif(n0, bb[2, 1], bb[2, 2])) xy.b <- (splancs::inout(xy0, barrier1)) |   (splancs::inout(xy0, barrier2)) ii <- which(!xy.b) dataset <- data.frame(   x = xy0[ii, 1], y = xy0[ii, 2]) (n <- nrow(dataset)) #> [1] 464 sigma.e <- 1 set.seed(3) dataset$outcome <-      drop(inla.mesh.project(         mesh,         loc = cbind(dataset$x, dataset$y),         field = u)) +    10 + rnorm(n, 0.0, sigma.e)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"model-fitting","dir":"Articles > Web","previous_headings":"","what":"Model fitting","title":"A barrier model illustration","text":"illustrate use function INLAspacetime implement barrier model Bakka et al. (2019). implementation consider cgeneric computational method useful implement new models INLA. method allows computations INLA take full advantage parallel computations, achieving shorter computation time original implementation. define model object use model formula inlabru way, field name spatial effect: inlabru main function can supplied model formula, data family, follows","code":"bmodel <- barrierModel.define(     mesh = mesh,      barrier.triangles = triBarrier,     prior.range = c(1, 0.01), ## P(range < 1) = 0.01     prior.sigma = c(1, 0.01), ## P(sigma > 1) = 0.01     range.fraction = 0.1) model <- outcome ~ Intercept(1) +     field(cbind(x, y), model = bmodel) #> Warning in inla.model.properties.generic(inla.trim.family(model), mm[names(mm) == : Model 'cgeneric' in section 'latent' is marked as 'experimental'; changes may appear at any time. #>   Use this model with extra care!!! Further warnings are disabled. result <- bru(     model, dataset, family = \"gaussian\")"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"results","dir":"Articles > Web","previous_headings":"","what":"Results","title":"A barrier model illustration","text":"can see summary posterior marginal distribution intercept hyper-parameters computations performed internal scale. log range log(\\(\\sigma\\)), \\(\\log(1/\\sigma_e^2)\\). However, can transform hyper-parameters internal marginal scale scale transformed posterior marginal distributions can extract summary compare values used sample data: can also visualize posterior marginal distributions ","code":"result$summary.fix #>               mean        sd 0.025quant 0.5quant 0.975quant     mode #> Intercept 10.11228 0.4081317   9.309898 10.10355   10.96502 10.10457 #>                    kld #> Intercept 1.037999e-06 pmarginals <-      list(         data.frame(             param = \"sigma.e\",             inla.tmarginal(                 function(x) exp(-x/2),                 result$internal.marginals.hyperpar[[1]])),         data.frame(             param = \"range\",             inla.tmarginal(                 function(x) exp(x),                 result$internal.marginals.hyperpar[[2]])),         data.frame(             param = \"sigma\",             inla.tmarginal(                 function(x) exp(x),                 result$internal.marginals.hyperpar[[3]]))     ) rbind(true = c(sigma.e = sigma.e, range = ranges[1], sigma = 1),       sapply(pmarginals, function(m)              unlist(inla.zmarginal(m[, -1], TRUE))[1:2])) #>         sigma.e    range     sigma #> true 1.00000000 4.000000 1.0000000 #> mean 1.04409390 4.045265 0.8999756 #> sd   0.03810062 1.087551 0.1384959 ggplot(do.call(rbind, pmarginals)) +      geom_line(aes(x=x, y=y)) +      facet_wrap(~param, scales = \"free\") +     theme_minimal()"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"the-fitted-field","dir":"Articles > Web","previous_headings":"Results","what":"The fitted field","title":"A barrier model illustration","text":"can visualize summaries fitted field. posterior mean standard deviation can projected small pixels added raster data help visualization, filter grid pixels considering barriers. can now visualize posterior mean  estimated field, considering posterior mean shown, exhibits different pattern side barrier, particularly far tip. Therefore successfully accounted barrier model. See tutorial details visualize implied correlation two points. Similarly, can plot posterior standard deviation field, data locations used estimate model. lower values around densely sampled locations higher values otherwise. highest near boundaries, including boundary barriers, far observed locations.","code":"grid.df$u.mean <- as.vector(   inla.mesh.project(     pgrid,     result$summary.random$field$mean)) grid.df$u.sd <- as.vector(   inla.mesh.project(     pgrid,     result$summary.random$field$sd)) gInBarrier <-    (splancs::inout(cbind(grid.df$x, grid.df$y), barrier1)) |   (splancs::inout(cbind(grid.df$x, grid.df$y), barrier2)) gg0 +    geom_raster(     data = grid.df[!gInBarrier, ],      aes(x = x, y = y, fill = u.mean)) +    gg.add ## look to the appendix for the code for this gg0 +    geom_raster(     data = grid.df[!gInBarrier, ],      aes(x = x, y = y, fill = u.sd)) +    geom_point(data = dataset, aes(x = x, y = y)) +   gg.add ## look to the appendix for the code for this"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"appendix-a-adapting-old-code","dir":"Articles > Web","previous_headings":"","what":"Appendix A: adapting old code","title":"A barrier model illustration","text":"adapt code based tutorial, one consider two new functions implemented, detailed bellow: arguments new functions names old ones. new function used define model additional arguments. See help function details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/barrierExample.html","id":"appendix-b-ggplot-reused-code","dir":"Articles > Web","previous_headings":"","what":"Appendix B: ggplot reused code","title":"A barrier model illustration","text":"additional ggplot2 code used","code":"gg.add <- list(   scale_fill_distiller(     type = \"div\",      palette = \"RdBu\",      na.value = \"transparent\") ) add.b0 <- list(   geom_polygon(     mapping = aes(x, y),      data = data.frame(       x = pmin(barrier1[,1], bb[1, 2]),        y = pmin(barrier1[,2], bb[2, 2])     ), colour = \"black\",    fill = gray(0.9, 0.5)), ##\"transparent\"),   geom_polygon(     mapping = aes(x, y),      data = data.frame(       x = pmin(barrier2[,1], bb[1, 2]),        y = pmin(barrier2[,2], bb[2, 2])      ), colour = \"black\",      fill = gray(0.9, 0.5))##\"transparent\") )"},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"abstract","dir":"Articles > Web","previous_headings":"","what":"Abstract","title":"The Piemonte dataset example","text":"vignette illustrate fit spacetime models Lindgren et al. (2023), dataset analysed Cameletti et al. (2013). perform use Bayesian paradigm theINLA package, using features provided inlabru package facilitate coding.","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"the-packages-and-setup","dir":"Articles > Web","previous_headings":"Introduction","what":"The packages and setup","title":"The Piemonte dataset example","text":"start loading required packages visualizations, ggplot2 patchwork packages. consider following settings INLA ask return WAIC, DIC CPO","code":"library(ggplot2) library(patchwork) library(INLA) #> Loading required package: Matrix #> Loading required package: sp #> The legacy packages maptools, rgdal, and rgeos, underpinning this package #> will retire shortly. Please refer to R-spatial evolution reports on #> https://r-spatial.org/r/2023/05/15/evolution4.html for details. #> This package is now running under evolution status 0 #> This is INLA_23.06.15 built 2023-06-15 06:01:53 UTC. #>  - See www.r-inla.org/contact-us for how to get help. library(INLAspacetime) library(inlabru) #inla.setOption( #  inla.mode = \"compact\", #  num.threads = \"5:-1\", #  smtp = \"pardiso\", #  pardiso.license = \"~/.pardiso.lic\" #) ctrc <- list(   waic = TRUE,   dic = TRUE,   cpo = TRUE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"getting-the-dataset","dir":"Articles > Web","previous_headings":"Introduction","what":"Getting the dataset","title":"The Piemonte dataset example","text":"use dataset analysed Cameletti et al. (2013), can downloaded follows. First, set filenames Download read borders file Download read coordinates file Download read dataset Inspect dataset Prepare time used Standardize covariates used data analysis define dataset including needed information outcome log PM10, used Cameletti et al. (2013).","code":"u0 <- paste0(     \"http://inla.r-inla-download.org/\",     \"r-inla.org/case-studies/Cameletti2012/\") coofl <- \"coordinates.csv\" datafl <- \"Piemonte_data_byday.csv\" bordersfl <- \"Piemonte_borders.csv\" ### get the domain borders if(!file.exists(bordersfl))     download.file(paste0(u0, bordersfl), bordersfl) dim(pborders <- read.csv(bordersfl)) #> [1] 27821     2 ### get the coordinates if(!file.exists(coofl))     download.file(paste0(u0, coofl), coofl) dim(locs <- read.csv(coofl)) #> [1] 24  3 ### get the dataset if(!file.exists(datafl))     download.file(paste0(u0, datafl), datafl) dim(pdata <- read.csv(datafl)) #> [1] 4368   11 head(pdata) #>   Station.ID     Date     A   UTMX    UTMY   WS   TEMP   HMIX PREC   EMI PM10 #> 1          1 01/10/05  95.2 469.45 4972.85 0.90 288.81 1294.6    0 26.05   28 #> 2          2 01/10/05 164.1 423.48 4950.69 0.82 288.67 1139.8    0 18.74   22 #> 3          3 01/10/05 242.9 490.71 4948.86 0.96 287.44 1404.0    0  6.28   17 #> 4          4 01/10/05 149.9 437.36 4973.34 1.17 288.63 1042.4    0 29.35   25 #> 5          5 01/10/05 405.0 426.44 5045.66 0.60 287.63 1038.7    0 32.19   20 #> 6          6 01/10/05 257.5 394.60 5001.18 1.02 288.59 1048.3    0 34.24   41 range(pdata$Date <- as.Date(pdata$Date, \"%d/%m/%y\")) #> [1] \"2005-10-01\" \"2006-03-31\" pdata$time <- as.integer(difftime(     pdata$Date, min(pdata$Date), units = \"days\")) + 1 ### prepare the covariates xnames <- c(\"A\", \"WS\", \"TEMP\", \"HMIX\", \"PREC\", \"EMI\") xmean <- colMeans(pdata[, xnames]) xsd <- sapply(pdata[xnames], sd)  ### prepare the data (st loc, scale covariates and log PM10) dataf <- data.frame(pdata[c(\"UTMX\", \"UTMY\", \"time\")],                     scale(pdata[xnames], xmean, xsd),                     y = log(pdata$PM10)) str(dataf) #> 'data.frame':    4368 obs. of  10 variables: #>  $ UTMX: num  469 423 491 437 426 ... #>  $ UTMY: num  4973 4951 4949 4973 5046 ... #>  $ time: num  1 1 1 1 1 1 1 1 1 1 ... #>  $ A   : num  -1.3956 -0.7564 -0.0254 -0.8881 1.4785 ... #>  $ WS  : num  -0.0777 -0.2319 0.038 0.4429 -0.6561 ... #>  $ TEMP: num  2.1 2.07 1.82 2.06 1.86 ... #>  $ HMIX: num  2.18 1.69 2.53 1.38 1.37 ... #>  $ PREC: num  -0.29 -0.29 -0.29 -0.29 -0.29 ... #>  $ EMI : num  -0.1753 -0.3454 -0.6353 -0.0985 -0.0324 ... #>  $ y   : num  3.33 3.09 2.83 3.22 3 ..."},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"the-data-model-definition","dir":"Articles > Web","previous_headings":"","what":"The data model definition","title":"The Piemonte dataset example","text":"consider following linear mixed model outcome \\[ \\mathbf{y} = \\mathbf{W}\\mathbf{\\beta} + \\mathbf{}\\mathbf{u} + \\mathbf{e} \\] \\(\\beta\\) fixed effects, regression coefficients including intercept, matrix covariates \\(\\mathbf{W}\\), \\(\\mathbf{u}\\) spatio-temporal random effect matrix \\(\\mathbf{}\\) projector matrix discretized domain data. spatio-temporal random effect \\(\\mathbf{u}\\) defined continuous spacetime domain discretized considering meshes time space. difference Cameletti et al. (2013) now use models Lindgren et al. (2023) \\(\\mathbf{u}\\). Define temporal mesh, knot spaced h, h = 1 means one per day. Define spatial mesh, used Cameletti et al. (2013). Visualize spatial mesh, border locations.  set prior likelihood precision considering PC-prior, Simpson et al. (2017), following probabilistic statements: P(\\(\\sigma_e > U_{\\sigma_e}\\)) = \\(\\alpha_{\\sigma_e}\\), using \\(U_{\\sigma_e}\\) = 1 \\(\\alpha_{\\sigma_e} = 0.05\\). inlabru can define likelihood model like() function use fitting models different linear predictors later. linear predictor, right-rand side formula, can defined using expression models going fit ","code":"nt <- max(pdata$time) h <- 1 tmesh <- inla.mesh.1d(   loc = seq(1, nt + h/2, h),    degree = 1) tmesh$n #> [1] 182 smesh <- inla.mesh.2d(     cbind(locs[,2], locs[,3]),     loc.domain = pborders,     max.edge = c(50, 300),     offset = c(10, 140),     cutoff = 5,     min.angle = c(26, 21)) smesh$n #> [1] 142 par(mfrow = c(1,1), mar = c(0,0,1,0)) plot(smesh, asp = 1) lines(pborders, lwd = 2, col = \"green4\") points(locs[, 2:3], pch = 19, col = \"blue\") lkprec <- list(     prec = list(prior = \"pcprec\", param = c(1, 0.05))) lhood <- like(   formula = y ~ .,   family = \"gaussian\",   control.family = list(     hyper = lkprec),   data = dataf) M <- ~ -1 + Intercept(1) + A + WS + TEMP + HMIX + PREC + EMI +     field(list(space = cbind(UTMX, UTMY),                 time = time),           model = stmodel)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"the-spacetime-models","dir":"Articles > Web","previous_headings":"","what":"The spacetime models","title":"The Piemonte dataset example","text":"implementation spacetime model uses cgeneric interface INLA, see documentation details. Therefore C code mainly build precision matrix compute model parameter priors compiled static library. code included INLAspacetime package also copied INLA package compiled compilers order avoid possible mismatches. order use , define matrices vectors needed, including prior parameter definitions. class models Lindgren et al. (2023) spatial range, temporal range marginal standard deviation parameters. consider PC-prior, Fuglstad et al. (2017), parameters defined probability statements: P(\\(r_s<U_{r_s}\\))=\\(\\alpha_{r_s}\\), P(\\(r_t<U_{r_t}\\))=\\(\\alpha_{r_t}\\) P(\\(\\sigma<U_{\\sigma}\\))=\\(\\alpha_{\\sigma}\\). consider \\(U_{r_s}=100\\), \\(U_{r_t}=5\\) \\(U_{\\sigma}=2\\). \\(\\alpha_{r_s}=\\alpha_{r_t}=\\alpha_{\\sigma}=0.05\\) selection one models Lindgren et al. (2023) chosing \\(\\alpha_t\\), \\(\\alpha_s\\) \\(\\alpha_e\\) integer numbers. start considering model \\(\\alpha_t=1\\), \\(\\alpha_s=0\\) \\(\\alpha_t=2\\), model separable spatio-temporal covariance, fit models later.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"defining-a-particular-model","dir":"Articles > Web","previous_headings":"The spacetime models","what":"Defining a particular model","title":"The Piemonte dataset example","text":"define object needed use function stModel.define() model selected considering values \\(\\alpha_t\\), \\(\\alpha_s\\) \\(\\alpha_e\\) collapsed. order illustrate done, can set overall integrate--zero constraint, need helps model components identification. uses weights based mesh node volumes, temporal spatial meshes. can set automatically defining model adding constr = TRUE. Initial values hyper-parameters help fit models less computing time. also important consider light dataset parameter scale. example, consider spatial domain within box around \\(203.7\\) \\(266.5\\) kilometers, already building mesh setting prior \\(r_s\\). can set initial values log parameters take less iterations converge: code fit model inlabru computing time Summary posterior marginal distributions fixed effects hyperparameters, transform posterior marginal distributions model hyperparameters ones computed internal scale, \\(\\log(1/\\sigma^2_e)\\), \\(\\log(r_s)\\), \\(\\log(r_t)\\) \\(\\log(\\sigma)\\), user scale parametrization, \\(\\sigma_e\\), \\(r_s\\), \\(r_t\\) \\(\\sigma\\), respectivelly. compute show summary However, better look posterior marginal , visualize later. model fitted Cameletti et al. (2013) includes two covariates setup model discrete temporal domain temporal correlation modeled first order autoregression parameter \\(\\rho\\). fitted model defined considering continuous temporal domain range parameter \\(r_s\\). However, first order autocorrelation taken \\(\\rho = \\exp(-h\\sqrt{8\\nu}/r_s)\\), \\(h\\) temporal resolution used temporal mesh \\(\\nu\\) equal \\(0.5\\) fitted model. can compare ou results Table 3 Cameletti et al. (2013) ","code":"model <- \"102\" stmodel <- stModel.define(     smesh, tmesh, model,     control.priors = list(         prs = c(150, 0.05),         prt = c(10, 0.05),         psigma = c(5, 0.05)),     constr = TRUE) theta.ini <- c(4, 7, 7, 1) fit102 <-      bru(M,         lhood,         options = list(             control.mode = list(theta = theta.ini, restart = TRUE),             control.compute = ctrc)) fit102$cpu #>         Pre     Running        Post       Total  #>   0.8647077 727.4715014   4.6581421 732.9943511 fit102$summary.fixed[, c(1, 2, 3, 5)] #>                  mean          sd   0.025quant   0.975quant #> Intercept  3.73744029 0.241835497  3.260159513  4.214210951 #> A         -0.17895021 0.049274641 -0.276622053 -0.082396679 #> WS        -0.06034280 0.008446095 -0.076894812 -0.043769035 #> TEMP      -0.12181626 0.035192169 -0.190898234 -0.052873372 #> HMIX      -0.02384229 0.013208951 -0.049705771  0.002100307 #> PREC      -0.05356054 0.008605946 -0.070421511 -0.036668411 #> EMI        0.03659733 0.015079008  0.006668547  0.065890430 post.h <- list(   sigma_e = inla.tmarginal(function(x) exp(-x/2),                             fit102$internal.marginals.hyperpar[[1]]),   range_s = inla.tmarginal(function(x) exp(x),                             fit102$internal.marginals.hyperpar[[2]]),   range_t = inla.tmarginal(function(x) exp(x),                             fit102$internal.marginals.hyperpar[[3]]),   sigma_u = inla.tmarginal(function(x) exp(x),                             fit102$internal.marginals.hyperpar[[4]]) ) shyper <- t(sapply(post.h, function(m)    unlist(inla.zmarginal(m, silent = TRUE)))) shyper[, c(1, 2, 3, 7)] #>                mean           sd  quant0.025  quant0.975 #> sigma_e   0.1806348  0.003795323   0.1733131   0.1882185 #> range_s 277.8466172 17.056345962 246.0303834 312.9980474 #> range_t  48.5651690  7.871554952  35.1829585  66.0284888 #> sigma_u   1.1230197  0.085644574   0.9666954   1.3028587 c(shyper[c(1, 4, 2), 1],    a = exp(-h * sqrt(8 * 0.5) / shyper[3, 1])) #>     sigma_e     sigma_u     range_s           a  #>   0.1806348   1.1230197 277.8466172   0.9596547"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"comparing-different-models","dir":"Articles > Web","previous_headings":"","what":"Comparing different models","title":"The Piemonte dataset example","text":"now fit model \\(121\\) \\(u\\) well, use code building model matrices use code fitting follows join fits list object make easier working computing time model fit number fn-calls optimization posterior mode parameter model (internal scale) compute posterior marginal distribution hyper-parameters user-interpretable scale, like first model, Join make visualization easier  comparison model parameters \\(\\mathbf{u}\\) different models done light covariance functions illustrated Lindgren et al. (2023). fitted \\(\\sigma_e\\) different models comparable can see considering model \\(121\\) \\(\\mathbf{u}\\), posterior marginal concentrated values lower considering model \\(102\\). can look posterior mean \\(u\\) models see model ‘121’ wider spread.  can also check fitting statistics DIC, WAIC, negative log probability ordinates (LPO) cross-validated version (LCPO), summarized mean.","code":"model <- \"121\" stmodel <- stModel.define(     smesh, tmesh, model,     control.priors = list(         prs = c(150, 0.05),         prt = c(10, 0.05),         psigma = c(5, 0.05)),     constr = TRUE) fit121 <-      bru(M,         lhood,         options = list(             control.mode = list(theta = theta.ini, restart = TRUE),             control.compute = ctrc)) results <- list(\"u102\" = fit102, \"u121\" = fit121) sapply(results, function(r) r$cpu) #>                u102         u121 #> Pre       0.8647077    0.5721993 #> Running 727.4715014 2473.3079085 #> Post      4.6581421    2.8127401 #> Total   732.9943511 2476.6928480 sapply(results, function(r) r$misc$nfunc) #> u102 u121  #>  292  403 sapply(results, function(r) r$mode$theta) #>                                                 u102      u121 #> Log precision for the Gaussian observations 3.423518  3.594522 #> Theta1 for field                            5.623695  7.289056 #> Theta2 for field                            3.858673 10.974764 #> Theta3 for field                            0.108385  2.152274 posts.h2 <- lapply(1:2, function(m) vector(\"list\", 4L)) for(m in 1:2) {     posts.h2[[m]]$sigma_e =         data.frame(         parameter = \"sigma_e\",          inla.tmarginal(           function(x) exp(-x/2),            results[[m]]$internal.marginals.hyperpar[[1]]))     for(p in 2:4) {       posts.h2[[m]][[p]] <-          data.frame(         parameter = c(NA, \"range_s\", \"range_t\", \"sigma_u\")[p],          inla.tmarginal(           function(x) exp(x),            results[[m]]$internal.marginals.hyperpar[[p]])       )     } } posts.df <- rbind(   data.frame(model = \"102\", do.call(rbind, posts.h2[[1]])),   data.frame(model = \"121\", do.call(rbind, posts.h2[[2]])) )  ggplot(posts.df) +   geom_line(aes(x = x, y = y, group = model, color = model)) +   ylab(\"Density\") + xlab(\"\") +    facet_wrap(~parameter, scales = \"free\") par(mfrow = c(1, 1), mar = c(3, 3, 0, 0.0), mgp = c(2, 1, 0)) uu.hist <- lapply(results, function(r)     hist(r$summary.random$field$mean,          -60:60/20, plot = FALSE)) ylm <- range(uu.hist[[1]]$count, uu.hist[[2]]$count) plot(uu.hist[[1]], ylim = ylm,      col = rgb(1, 0.1, 0.1, 1.0), border = FALSE,       xlab = \"u\", main = \"\") plot(uu.hist[[2]], add = TRUE, col = rgb(0.1, 0.1, 1, 0.5), border = FALSE) legend(\"topleft\", c(\"separable\", \"non-separable\"),         fill = rgb(c(1,0.1), 0.1, c(0.1, 1), c(1, 0.5)),         border = 'transparent', bty = \"n\") t(sapply(results, function(r) {   c(DIC = mean(r$dic$local.dic, na.rm = TRUE),     WAIC = mean(r$waic$local.waic, na.rm = TRUE),     LPO = -mean(log(r$po$po), na.rm = TRUE),      LCPO = -mean(log(r$cpo$cpo), na.rm = TRUE)) })) #>             DIC       WAIC        LPO       LCPO #> u102 -0.3787473 -0.2614043 -0.4078423 -0.1139944 #> u121 -0.4113443 -0.3163461 -0.5084943 -0.1099562"},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/web/piemonte.html","id":"the-automatic-group-leave-out-cross-validation","dir":"Articles > Web","previous_headings":"","what":"The automatic group-leave-out cross validation","title":"The Piemonte dataset example","text":"One may interested evaluating model prediction. leave-one-strategy already available INLA since several years ago, see Held, Schrodle, Rue (2010) details. Recently, automatic group cross validation strategy implemented, see Liu Rue (2023) details. can inspect detected observations posterior linear predictor correlated one, including . 100th observation model “102” result model “121” intersection , model setup used. can check observations dataset found locations nearby time. can compute negative mean log score lower number better","code":"g5cv <- lapply(   results, inla.group.cv, num.level.sets = 5,    strategy = \"posterior\", size.max = 50) g5cv$u102$group[[100]] #> $idx #> [1]  52  76  98 100 106 124 #>  #> $corr #> [1] 0.2550073 0.4275722 0.2989949 1.0000000 0.3286171 0.4275722 g5cv$u121$group[[100]] #> $idx #> [1]  52  76  98 100 124 148 #>  #> $corr #> [1] 0.1669681 0.3732939 0.1669681 1.0000000 0.3757334 0.1637957 dataf[g5cv$u102$group[[100]]$idx, ] #>       UTMX    UTMY time          A           WS     TEMP       HMIX       PREC #> 52  437.36 4973.34    3 -0.8881265  0.982687762 1.077344 -0.6959771 1.94505331 #> 76  437.36 4973.34    4 -0.8881265  0.674216318 1.297701  0.9479287 3.70037355 #> 98  423.48 4950.69    5 -0.7563919 -0.578948923 1.387847 -0.4413098 0.08590275 #> 100 437.36 4973.34    5 -0.8881265  0.770613644 1.441935  0.2530248 0.16426526 #> 106 416.65 4985.65    5  0.3225334 -0.000564966 1.397863  1.1608209 0.63052220 #> 124 437.36 4973.34    6 -0.8881265  0.751334179 1.618220  1.0845756 0.03692618 #>             EMI        y #> 52  -0.01821338 2.564949 #> 76  -0.01542101 2.708050 #> 98  -0.27115486 2.484907 #> 100  0.01622576 2.890372 #> 106 -0.61950205 2.708050 #> 124  0.02599903 2.995732 sapply(g5cv, function(r) -mean(log(r$cv), na.rm = TRUE)) #>       u102       u121  #> 0.04089315 0.06973027"},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/articles/website_examples.html","id":"vignettes","dir":"Articles","previous_headings":"","what":"Vignettes","title":"Vignettes on the INLAspacetime website","text":"examples/tutorials available (https://eliaskrainski.github.io/INLAspacetime/) barrier model illustration Piemonte dataset example","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elias Teixeira Krainski. Maintainer, author, copyright holder. Finn Lindgren. Author. Haavard Rue. Author.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Krainski E, Lindgren F, Rue H (2023). INLAspacetime: Spatial Spatio-Temporal Models using 'INLA'. R package version 0.1.6, https://github.com/eliaskrainski/INLAspacetime.","code":"@Manual{,   title = {INLAspacetime: Spatial and Spatio-Temporal Models using 'INLA'},   author = {Elias Teixeira Krainski and Finn Lindgren and Haavard Rue},   year = {2023},   note = {R package version 0.1.6},   url = {https://github.com/eliaskrainski/INLAspacetime}, }"},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"inlaspacetime","dir":"","previous_headings":"","what":"Spatial and Spatio-Temporal Models using INLA","title":"Spatial and Spatio-Temporal Models using INLA","text":"R package implement certain spatial spatio-temporal models taking use cgeneric interface INLA package. interface way implement models writing C code build precision matrix compiling INLA can use internally.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial and Spatio-Temporal Models using INLA","text":"can install current CRAN version INLAspacetime: can install latest version INLAspacetime GitHub ","code":"install.packages(\"INLAspacetime\") ## install.packages(\"remotes\") remotes::install_github(\"eliaskrainski/INLAspacetime\",  build_vignettes=TRUE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"we-have-implemented","dir":"","previous_headings":"","what":"We have implemented","title":"Spatial and Spatio-Temporal Models using INLA","text":"models presented https://arxiv.org/abs/2006.04917 barrier model proposed https://doi.org/10.1016/j.spasta.2019.01.002","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Spatial and Spatio-Temporal Models using INLA","text":"basic example fit spacetime model fake data. model fitting using inlabru facilitates coding. Loading packages: Define spatial temporal discretization meshes Define spacetime model object used Define data model: linear predictor terms Setting likelihood Fitting Summary model parameters","code":"set.seed(1) n <- 5 dataf <- data.frame(     s1   = runif(n, -1, 1),     s2   = runif(n, -1, 1),     time = runif(n, 1, 4),     y    = rnorm(n, 0, 1)) str(dataf) #> 'data.frame':    5 obs. of  4 variables: #>  $ s1  : num  -0.469 -0.256 0.146 0.816 -0.597 #>  $ s2  : num  0.797 0.889 0.322 0.258 -0.876 #>  $ time: num  1.62 1.53 3.06 2.15 3.31 #>  $ y   : num  -0.00577 2.40465 0.76359 -0.79901 -1.14766 library(INLA) #> Loading required package: Matrix #> Loading required package: foreach #> Loading required package: parallel #> Loading required package: sp #> The legacy packages maptools, rgdal, and rgeos, underpinning this package #> will retire shortly. Please refer to R-spatial evolution reports on #> https://r-spatial.org/r/2023/05/15/evolution4.html for details. #> This package is now running under evolution status 0 #> This is INLA_23.05.30-1 built 2023-05-30 11:52:19 UTC. #>  - See www.r-inla.org/contact-us for how to get help. #>  - To enable PARDISO sparse library; see inla.pardiso() library(INLAspacetime) library(inlabru) smesh <- inla.mesh.2d(   loc = cbind(0,0),    max.edge = 5,    offset = 2) tmesh <- inla.mesh.1d(   loc = 0:5) stmodel <- stModel.define(     smesh = smesh, ## spatial mesh     tmesh = tmesh, ## temporal mesh     model = '121', ## model, see the paper     control.priors = list(         prs = c(1, 0.1), ## P(spatial range < 1) = 0.1         prt = c(5, 0), ## temporal range fixed to 5         psigma = c(1, 0.1) ## P(sigma > 1) = 0.1         )     ) linpred <- ~ 1 +     field(list(space = cbind(s1, s2),                 time = time),           model = stmodel) ctrlf <- list(   hyper = list(     prec = list(       initial = 10,        fixed = TRUE)       ) ) datalike <- like(   formula = y ~ .,    family = \"gaussian\",   control.family = ctrlf,    data=dataf) result <-    bru(     components = linpred,     datalike,     options = list(       control.inla = list(         int.strategy = \"eb\"         ),       verbose = !TRUE)     ) #> Warning in inla.model.properties.generic(inla.trim.family(model), mm[names(mm) == : Model 'cgeneric' in section 'latent' is marked as 'experimental'; changes may appear at any time. #>   Use this model with extra care!!! Further warnings are disabled. result$summary.fixed #>                mean      sd 0.025quant  0.5quant 0.975quant      mode kld #> Intercept 0.5211454 3.49482  -6.328575 0.5211454   7.370866 0.5211454   0 result$summary.hyperpar #>                      mean        sd 0.025quant 0.5quant 0.975quant      mode #> Theta1 for field 1.202935 0.5125858  0.3321324 1.162519   2.324768 0.9707531 #> Theta2 for field 1.435746 0.1706775  1.1044643 1.434143   1.776487 1.4273398"},{"path":"https://eliaskrainski.github.io/INLAspacetime/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Spatial and Spatio-Temporal Models using INLA","text":"Please check Tutorials","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/INLAspacetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial and Spatio-Temporal Models using INLA — INLAspacetime","title":"Spatial and Spatio-Temporal Models using INLA — INLAspacetime","text":"package main purpose provide user friendly functions fit temporal, spatial spatio-temporal models using INLA software available www.r-inla.org","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/INLAspacetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial and Spatio-Temporal Models using INLA — INLAspacetime","text":"","code":"INLAspacetime()"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/INLAspacetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial and Spatio-Temporal Models using INLA — INLAspacetime","text":"opens Vignettes directory browser","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"The 2nd order temporal matrices with boundary correction — Jmatrices","title":"The 2nd order temporal matrices with boundary correction — Jmatrices","text":"2nd order temporal matrices boundary correction","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The 2nd order temporal matrices with boundary correction — Jmatrices","text":"","code":"Jmatrices(tmesh)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The 2nd order temporal matrices with boundary correction — Jmatrices","text":"tmesh Temporal mesh","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Jmatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The 2nd order temporal matrices with boundary correction — Jmatrices","text":"return list temporal finite element method matrices supplied mesh.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":null,"dir":"Reference","previous_headings":"","what":"To visualize time series over space. — stlines","title":"To visualize time series over space. — stlines","text":"visualize time series space.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To visualize time series over space. — stlines","text":"","code":"stlines(   stdata,   spatial,   group = NULL,   nmax.group = NULL,   xscale = 1,   yscale = 1,   colour = NULL,   ... )  stpoints(   stdata,   spatial,   group = NULL,   nmax.group = NULL,   xscale = 1,   yscale = 1,   colour = NULL,   ... )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To visualize time series over space. — stlines","text":"stdata matrix data, column location. spatial object one class defined sp package. group integer vector indicating spatial unit time series belongs . Default NULL assumed time series belongs o spatial unit. nmax.group integer indicating maximum number time series plotted spatial unit. Default NULL, drawn. xscale numeric define scaling factor horizontal direction. yscale numeric define scaling factor vertical direction. colour color (may vector, one time series). Default NULL generate colors considering average time series. automatic colors defined using rgb() function alpha=0.5. considers relative rank time series mean, r. r used red,  1-r used blue triangular function, 1-2*|1-r/2|, considered green. , time series mean among lowest time series averages shown blue among highest temperatures shown red. transition blue red goes intermediate ones shown light green. ... arguments passed lines function.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To visualize time series over space. — stlines","text":"add lines existing plot","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"To visualize time series over space. — stlines","text":"Scaling times series needed drawing map. area bounding box spatial object divided number locations standard scaling factor. multiplied user given xcale yscale.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"To visualize time series over space. — stlines","text":"stlines(): time series map centered location. stpoints(): time series map centered location.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/Plot.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"To visualize time series over space. — stlines","text":"many geographical locations, look good","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code to compute the auto-correlation for an AR2 model. — ar2cor","title":"Illustrative code to compute the auto-correlation for an AR2 model. — ar2cor","text":"Computes auto-correlation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code to compute the auto-correlation for an AR2 model. — ar2cor","text":"","code":"ar2cor(a1, a2, k = 30)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code to compute the auto-correlation for an AR2 model. — ar2cor","text":"a1 first auto-regression coefficient. a2 second auto-regression coefficient. k maximun length evaluating auto-correlation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code to compute the auto-correlation for an AR2 model. — ar2cor","text":"autocorrelation vector matrix, whenever a1 a2 scalar vector.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Illustrative code to compute the auto-correlation for an AR2 model. — ar2cor","text":"Let second order auto-regression model defined x_t + a_1 x_{t-1} + a_2 x_{t-2} = w_t w_t ~ N(0, 1).","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Illustrative code to compute the auto-correlation for an AR2 model. — ar2cor","text":"","code":"plot(ar2cor(-1.7, 0.963), type = \"o\")"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Precision matrix for an AR2 model. — ar2precision","title":"Precision matrix for an AR2 model. — ar2precision","text":"Creates precision matrix sparse matrix object considering specification stated details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precision matrix for an AR2 model. — ar2precision","text":"","code":"ar2precision(n, a)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precision matrix for an AR2 model. — ar2precision","text":"n size model. length three vector coefficients. See details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Precision matrix for an AR2 model. — ar2precision","text":"precision matrix sparse matrix object edge correction.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Precision matrix for an AR2 model. — ar2precision","text":"Let second order auto-regression model defined $$a_0 x_t + a_1 x_{t-1} + a_2 x_{t-2} = w_t, w_t ~ N(0, 1).$$ n times n symmetric precision matrix Q x_1, x_2, ..., x_n following non-zero elements: \\(Q_{1,1} = Q_{n,n} = a_0^2\\) \\(Q_{2,2} = Q_{n-1,n-1} = a_0^2 + a_1^2\\) \\(Q_{1,2} = Q_{2,1} = Q_{n-1,n} = Q_{n,n-1} = a_0 a_1\\) \\(Q_{t,t} = q_0 = a_0^2 + a_1^2 + a_2^2, t = 3, 4, ..., n-2\\) \\(Q_{t,t-1} = Q_{t-1,t} = q_1 = a_1(a_0 + a_2), t = 3, 4, ..., n-1\\) \\(Q_{t,t-2} = Q_{t-2,t} = q_2 = a_2 a_0, t = 3, 4, ..., n\\)","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ar2precision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precision matrix for an AR2 model. — ar2precision","text":"","code":"ar2precision(7, c(1, -1.5, 0.9)) #> 7 x 7 sparse Matrix of class \"dsTMatrix\" #>                                              #> [1,]  1.0 -1.50  0.90  .     .     .     .   #> [2,] -1.5  3.25 -2.85  0.90  .     .     .   #> [3,]  0.9 -2.85  4.06 -2.85  0.90  .     .   #> [4,]  .    0.90 -2.85  4.06 -2.85  0.90  .   #> [5,]  .    .     0.90 -2.85  4.06 -2.85  0.9 #> [6,]  .    .     .     0.90 -2.85  3.25 -1.5 #> [7,]  .    .     .     .     0.90 -1.50  1.0"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a spacetime model object for the f() call. — barrierModel.define","title":"Define a spacetime model object for the f() call. — barrierModel.define","text":"Define spacetime model object f() call.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a spacetime model object for the f() call. — barrierModel.define","text":"","code":"barrierModel.define(   mesh,   barrier.triangles,   prior.range,   prior.sigma,   range.fraction = 0.2,   constr = FALSE,   debug = FALSE,   verbose = FALSE,   useINLAprecomp = TRUE,   libpath = NULL )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a spacetime model object for the f() call. — barrierModel.define","text":"mesh spatial mesh barrier.triangles integer vector specify triangles centers barrier domain prior.range numeric vector containing U define probability statements P(range < U) = used setup PC-prior range. = 0 U taken fixed value range. prior.sigma numeric vector containing U define probability statements P(range > U) = used setup PC-prior sigma. = 0 U taken fixed value sigma. range.fraction numeric specify fraction range barrier domain. Default value 0.2. constr logical indicate integral field domain constrained zero. Default value FALSE. debug logical indicating run debug mode. verbose logical indicating print parameter values. useINLAprecomp logical indicating used shared object pre-compiled INLA. considered libpath provided. libpath string shared object. Default NULL.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a spacetime model object for the f() call. — barrierModel.define","text":"objects used f() formula term INLA.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/barrierModel.define.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a spacetime model object for the f() call. — barrierModel.define","text":"See paper.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/bru_get_mapper.stModel_cgeneric.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapper object for automatic inlabru interface — bru_get_mapper.stModel_cgeneric","title":"Mapper object for automatic inlabru interface — bru_get_mapper.stModel_cgeneric","text":"Return inlabru bru_mapper object can used computing model matrices space-time model components.  bru_get_mapper() function called inlabru methods automatically obtain needed mapper object (inlabru 2.7.0.9001; , use mapper = bru_get_mapper(model) explicitly).","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/bru_get_mapper.stModel_cgeneric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mapper object for automatic inlabru interface — bru_get_mapper.stModel_cgeneric","text":"","code":"bru_get_mapper.stModel_cgeneric(model, ...)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/bru_get_mapper.stModel_cgeneric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mapper object for automatic inlabru interface — bru_get_mapper.stModel_cgeneric","text":"model model object (class stModel_cgeneric, stModel.define barrierModel_cgeneric, barrierModel.define) ... Unused.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/bru_get_mapper.stModel_cgeneric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mapper object for automatic inlabru interface — bru_get_mapper.stModel_cgeneric","text":"bru_mapper object class bru_mapper_multi sub-mappers space time based model smesh tmesh mesh objects.","code":""},{"path":[]},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Whittle-Matern correlation function. — cWhittleMatern","title":"Computes the Whittle-Matern correlation function. — cWhittleMatern","text":"computes correlation function derived Matern model, see Matern (1960) eq. (2.4.7). nu=1, see Whittle (1954) eq. (68). limiting case nu=0, see Besag (1981) eq. (14-15).","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Whittle-Matern correlation function. — cWhittleMatern","text":"","code":"cWhittleMatern(x, range, nu, kappa = sqrt(8 * nu)/range)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Whittle-Matern correlation function. — cWhittleMatern","text":"x distance. range practical range (prefered parametrization) given range = sqrt(8 * nu) / kappa, kappa scale parameter specialized references. nu process smoothness parameter. kappa scale parameter, commonly considered specialized literature.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the Whittle-Matern correlation function. — cWhittleMatern","text":"correlation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the Whittle-Matern correlation function. — cWhittleMatern","text":"Whittle, P. (1954) Stationary Processes Plane. Biometrika, Vol. 41, . 3/4, pp. 434-449. http://www.jstor.org/stable/2332724 Matern, B. (1960) Spatial Variation: Stochastic models application problems forest surveys sampling investigations. PhD Thesis. Besag, J. (1981) System Two-Dimensional Recurrence Equations. JRSS-B, Vol. 43 . 3, pp. 302-309. https://www.jstor.org/stable/2984940","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/cWhittleMatern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the Whittle-Matern correlation function. — cWhittleMatern","text":"","code":"plot(function(x) cWhittleMatern(x, 1, 5),   bty = \"n\", las = 1,   xlab = \"Distance\", ylab = \"Correlation\" ) plot(function(x) cWhittleMatern(x, 1, 1), add = TRUE, lty = 2) plot(function(x) cWhittleMatern(x, 1, 0.5), add = TRUE, lty = 3) abline(h = 0.139, lty = 3, col = gray(0.5, 0.5))"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/downloadUtilFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Donload the data files used — downloadUtilFiles","title":"Donload the data files used — downloadUtilFiles","text":"Donload data files used","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/downloadUtilFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Donload the data files used — downloadUtilFiles","text":"","code":"downloadUtilFiles(data.dir, year = 2022, force = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/downloadUtilFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Donload the data files used — downloadUtilFiles","text":"data.dir folder store files. year year daily weather data. force logical indicating force download. FALSE file downloaded exists locally yet.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/downloadUtilFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Donload the data files used — downloadUtilFiles","text":"named character vector local file names: daily.data, stations., elevation.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Select data from the daily dataset — ghcndSelect","title":"Select data from the daily dataset — ghcndSelect","text":"Select data daily dataset","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select data from the daily dataset — ghcndSelect","text":"","code":"ghcndSelect(   gzfile,   variable = c(\"TMIN\", \"TAVG\", \"TMAX\"),   qflag = \"\",   verbose = TRUE,   astype = as.integer )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select data from the daily dataset — ghcndSelect","text":"gzfile local filename daily data file file. E.g. 2023.csv.gz https://www.ncei.noaa.gov/pub/data/ghcn/daily/by_year/ see references bellow. variable string variable name(s) selected qflag string quality control flag(s) verbose logical indicating progress printed astype function convert data class, default set convert data integer.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select data from the daily dataset — ghcndSelect","text":"one variable, returns array whose dimentions days, stations, variables. one variable, returns matrix whose dimentions days, stations.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select data from the daily dataset — ghcndSelect","text":"default selects TMIN, TAVG TMAX return integer original data also integer units 10 Celcius degrees.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Select data from the daily dataset — ghcndSelect","text":"can take time execute , example, data.table package available.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/ghcndSelect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select data from the daily dataset — ghcndSelect","text":"Menne, M., Durre, ., Vose, R., Gleason, B. Houston, T. (2012) overview global historical climatology network-daily database. Journal Atmospheric Oceanic Technology, 897–910.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh.dual.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts the dual of a mesh object. — mesh.dual","title":"Extracts the dual of a mesh object. — mesh.dual","text":"Extracts dual mesh object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh.dual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts the dual of a mesh object. — mesh.dual","text":"","code":"mesh.dual(mesh, SP = TRUE, mc.cores = getOption(\"mc.cores\", 2L))"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh.dual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts the dual of a mesh object. — mesh.dual","text":"mesh 2d mesh object. SP logical indicating output returned SpatialPolygons object. Default TRUE. mc.cores number threads used.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh.dual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts the dual of a mesh object. — mesh.dual","text":"list polygons SpatialPolygons object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code for building a mesh in 2d domain. — mesh2d","title":"Illustrative code for building a mesh in 2d domain. — mesh2d","text":"Creates mesh object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code for building a mesh in 2d domain. — mesh2d","text":"","code":"mesh2d(loc, domain, max.edge, offset, SP = TRUE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code for building a mesh in 2d domain. — mesh2d","text":"loc two column matrix location coordinates. domain two column matrix defining domain. max.edge maximun edge length. offset length outer extension. SP logical indicating output include SpatialPolygons.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code for building a mesh in 2d domain. — mesh2d","text":"mesh object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2d.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Illustrative code for building a mesh in 2d domain. — mesh2d","text":"just illustration purpose one consider efficient function available INLA package.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2fem.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code for Finite Element matrices of a mesh in 2d domain. — mesh2fem","title":"Illustrative code for Finite Element matrices of a mesh in 2d domain. — mesh2fem","text":"Illustrative code Finite Element matrices mesh 2d domain. Illustrative code Finite Element matrices triangles barrier domain.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2fem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code for Finite Element matrices of a mesh in 2d domain. — mesh2fem","text":"","code":"mesh2fem(mesh, order = 2, barrier.triangles = NULL)  mesh2fem.barrier(mesh, barrier.triangles = NULL)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2fem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code for Finite Element matrices of a mesh in 2d domain. — mesh2fem","text":"mesh 2d mesh object. order desired order. barrier.triangles integer index specify triangles barrier domain","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2fem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code for Finite Element matrices of a mesh in 2d domain. — mesh2fem","text":"list object containing FE matrices. list object containing FE matrices barrier problem.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code to build the projector matrix for SPDE models. — mesh2projector","title":"Illustrative code to build the projector matrix for SPDE models. — mesh2projector","text":"Creates projector matrix object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code to build the projector matrix for SPDE models. — mesh2projector","text":"","code":"mesh2projector(   mesh,   loc = NULL,   lattice = NULL,   xlim = NULL,   ylim = NULL,   dims = c(100, 100) )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code to build the projector matrix for SPDE models. — mesh2projector","text":"mesh 2d mesh object. loc two columns matrix locations project . lattice Unused; feature supported illustration. xlim, ylim vector boundary limits. dims number subdivisions boundary limits.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code to build the projector matrix for SPDE models. — mesh2projector","text":"projector matrix list sparse matrix object x$proj$..","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/mesh2projector.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Illustrative code to build the projector matrix for SPDE models. — mesh2projector","text":"just illustration purpose one consider efficient functions available INLA inlabru packages, e.g. inlabru::fm_evaluator.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/outDetect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect outliers in a time series considering the raw data\nand a smoothed version of it. — outDetect","title":"Detect outliers in a time series considering the raw data\nand a smoothed version of it. — outDetect","text":"Detect outliers time series considering raw data smoothed version .","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/outDetect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect outliers in a time series considering the raw data\nand a smoothed version of it. — outDetect","text":"","code":"outDetect(x, weights = NULL, ff = c(7, 7))"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/outDetect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect outliers in a time series considering the raw data\nand a smoothed version of it. — outDetect","text":"x numeric vector weights non-increasing numeric vector used weights computing smoothed vector rooling window average. Default null \\(w_j\\) proportional j equation Details . ff numeric length two vector factors used consider many times standard deviation one data point considered outlier.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/outDetect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect outliers in a time series considering the raw data\nand a smoothed version of it. — outDetect","text":"logical vector indicating data outlier attributes detailed bellow. attr(, 'm') mean x. attr(, 's') standard devation x. attr(, 'ss') standard deviation smoothed data \\(y_t\\) defined \\(y_t = \\sum_{k=j}^h w_j * (x_{t-j}+x_{t+j})/2\\) s ss used define outliers \\(|x_t-m|/s>ff_1\\) \\(|x_t-y_t|/ss>ff_2\\) attr(, 'xs') smoothed time series \\(y_t\\)","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":null,"dir":"Reference","previous_headings":"","what":"Funtions to help converting from/to user/internal parametrization. — paramsUtils","title":"Funtions to help converting from/to user/internal parametrization. — paramsUtils","text":"Funtions help converting /user/internal parametrization.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funtions to help converting from/to user/internal parametrization. — paramsUtils","text":"","code":"gsConstant(lgammas, alpha, smanifold)  gammas2params(lgammas, alpha.t, alpha.s, alpha.e, smanifold = \"R2\")  params2gammas(lparams, alpha.t, alpha.s, alpha.e, smanifold = \"R2\")"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funtions to help converting from/to user/internal parametrization. — paramsUtils","text":"lgammas SPDE parameters log(gamma.s, gamma.t, gamma.e) alpha resulting spatial order. Values \"S1\", \"S2\", \"R1\", \"R2\" \"R3\". smanifold spatial domain manifold. alpha.t temporal order SPDE alpha.s spatial order spatial differential operator non-separable part. alpha.e spatial order spatial differential operator separable part. lparams log(spatial range, temporal range, sigma)","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funtions to help converting from/to user/internal parametrization. — paramsUtils","text":"part sigma due spatial constant gamma.s log(spatial range, temporal range, sigma) log(gamma.s, gamma.t, gamma.e)","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/paramsUtils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funtions to help converting from/to user/internal parametrization. — paramsUtils","text":"","code":"gammas2params(log(c(0, 0, 0)), 1, 2, 1, \"R2\") #>    lrs    lrt lsigma  #>    Inf    NaN    NaN  params2gammas(log(c(1, 1, 1)), 1, 2, 1, \"R2\") #>        rs        rt     sigma  #>  1.039721  1.386294 -3.344954"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal util functions — Heron","title":"Internal util functions — Heron","text":"computes area triangle given three coordinates.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal util functions — Heron","text":"","code":"Heron(x, y)  Area(x, y)  Stiffness(x, y)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal util functions — Heron","text":"x, y coordinate vectors.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal util functions — Heron","text":"area triangle area general polygon stiffness matrix triangle","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal util functions — Heron","text":"Function used internally compute area triangle.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/polyUtils.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Internal util functions — Heron","text":"Internal functions, exported.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrative code to build the precision matrix for SPDE kind models. — spde2precision","title":"Illustrative code to build the precision matrix for SPDE kind models. — spde2precision","text":"Creates precision matrix sparse matrix object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrative code to build the precision matrix for SPDE kind models. — spde2precision","text":"","code":"spde2precision(kappa, fem, alpha)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrative code to build the precision matrix for SPDE kind models. — spde2precision","text":"kappa scale parameter. fem list containing Finite Element matrices. alpha smoothness parameter.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrative code to build the precision matrix for SPDE kind models. — spde2precision","text":"precision matrix sparse matrix object.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/spde2precision.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Illustrative code to build the precision matrix for SPDE kind models. — spde2precision","text":"just illustration purpose one consider efficient function available INLA package.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a spacetime model object for the f() call. — stModel.define","title":"Define a spacetime model object for the f() call. — stModel.define","text":"Define spacetime model object f() call.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a spacetime model object for the f() call. — stModel.define","text":"","code":"stModel.define(   smesh,   tmesh,   model,   control.priors,   constr = FALSE,   debug = FALSE,   verbose = FALSE,   useINLAprecomp = TRUE,   libpath = NULL )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a spacetime model object for the f() call. — stModel.define","text":"smesh spatial mesh tmesh temporal mesh model three characters string specify smoothness alpha (one integer) parameters. Currently considers 102, 121, 202 220 models. control.priors named list parameter priors. E.g. prior.rs, prior.rt prior.sigma vectors length two (U, ) define corresponding PC-prior P(r_s<U)=, P(r_t<U)=P(sigma>U)=. =0 U taken fixed value parameter. constr logical indicate integral field domain constrained zero. Default value FALSE. debug logical indicating run debug mode. verbose logical indicating print parameter values. useINLAprecomp logical indicating used shared object pre-compiled INLA. considered libpath provided. libpath string shared object. Default NULL.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a spacetime model object for the f() call. — stModel.define","text":"objects used f() formula term INLA.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.define.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a spacetime model object for the f() call. — stModel.define","text":"See paper.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the spacetime model matrices. — stModel.matrices","title":"Define the spacetime model matrices. — stModel.matrices","text":"function computes matrices needed build precision matrix non-stationary non-separable spatio-temporal model, ...","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the spacetime model matrices. — stModel.matrices","text":"","code":"stModel.matrices(smesh, tmesh, model, constr = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the spacetime model matrices. — stModel.matrices","text":"smesh mesh object spatial domain. tmesh mesh object time domain. model string identifying model. far following models: '102', '121', '202' '220' models. constr logical indicate integral field domain constrained zero. Default value FALSE.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the spacetime model matrices. — stModel.matrices","text":"list containing needed objects model definition. 'manifold' spedify string model identification length three vector constants c1, c2 c3 vector d matrix T model matrices M_1, ..., M_m","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stModel.matrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the spacetime model matrices. — stModel.matrices","text":"See paper vignette('stspdemodels') details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":null,"dir":"Reference","previous_headings":"","what":"To retrieve goodness of fit statistics. — stats.inla","title":"To retrieve goodness of fit statistics. — stats.inla","text":"Extracts dic, waic log-cpo output returned inla function INLA package bru function inlabru package, computes log-po, mse, mae, crps scrps given input. summary applied considering user imputed function, default mean.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To retrieve goodness of fit statistics. — stats.inla","text":"","code":"stats.inla(m, i = NULL, y, fsummarize = mean)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To retrieve goodness of fit statistics. — stats.inla","text":"m inla output object. index subset estimated values. y observed compare . fsummarize summary function, default base::mean().","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To retrieve goodness of fit statistics. — stats.inla","text":"named numeric vector extracted statistics.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"To retrieve goodness of fit statistics. — stats.inla","text":"assumes Gaussian posterior predictive distributions! Considering defaults, n observations, \\(y_i, = 1, 2, ..., n\\), . dic $$\\sum_i d_i/n$$ \\(d_i\\) dic computed observation . . waic $$\\sum_i w_i/n$$ \\(w_i\\) waic computed observation . . lcpo $$-\\sum_i \\log(p_i)/n$$ \\(p_i\\) cpo computed observation . log-po, crps, scrps scores assumes Gaussian predictive distribution observation \\(y_i\\) following definitions: \\(z_i = (y_i-\\mu_i)/\\sigma_i\\), \\(\\mu_i\\) posterior mean linear predictor, \\(\\sigma_i = \\sqrt{v_i + 1/\\tau_y}\\), \\(\\tau_y\\) observation posterior mean, \\(v_i\\) posterior variance linear predictor \\(y_i\\). consider \\(\\phi()\\) density standard Gaussian variable \\(\\psi()\\) corresponding Cumulative Probability Distribution. . lpo $$-\\sum_i \\log(\\phi(z_i))/n$$ . crps $$\\sum_i r_i/n$$ $$r_i=\\sigma_i/\\sqrt{\\pi} - 2\\sigma_i\\phi(z_i) + (y_i-\\mu_i)(1-2\\psi(z_i))$$ . scrps $$\\sum_i s_i/n$$ $$s_i=-\\log(2\\sigma_i/\\sqrt{\\pi})/2 -\\sqrt{\\pi}(\\phi(z_i)-\\sigma_iz_i/2+z_i\\psi(z_i))$$","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"To retrieve goodness of fit statistics. — stats.inla","text":"scores negatively oriented means smaller scores better.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stats.inla.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"To retrieve goodness of fit statistics. — stats.inla","text":"Held, L. Schrödle, B. Rue, H. (2009). Posterior Cross-validatory Predictive Checks: Comparison MCMC INLA. Statistical Modelling Regression Structures pp 91–110. https://link.springer.com/chapter/10.1007/978-3-7908-2413-1_6. Bolin, D. Wallin, J. (2022) Local scale invariance robustness proper scoring rules. Statistical Science. doi:10.1214/22-STS864 .","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stdSubs.html","id":null,"dir":"Reference","previous_headings":"","what":"To check unusual low/high variance segments — stdSubs","title":"To check unusual low/high variance segments — stdSubs","text":"check unusual low/high variance segments","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stdSubs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To check unusual low/high variance segments — stdSubs","text":"","code":"stdSubs(x, nsub = 12, fs = 15)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stdSubs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To check unusual low/high variance segments — stdSubs","text":"x numeric vector nsub number segments length fs numeric use detecting hight low local standard deviations.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/stdSubs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To check unusual low/high variance segments — stdSubs","text":"logical indicating st fs times lower/higher average st, returned attribute: attr(, 'st') numeric vector standard deviation segment data.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a matrix or a list of matrices\nfor use in some cgeneric code. — upperPadding","title":"Prepare a matrix or a list of matrices\nfor use in some cgeneric code. — upperPadding","text":"Define graph union supplied matrices return row ordered diagonal plus upper triangle padding zeroes one returned matrices pattern.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a matrix or a list of matrices\nfor use in some cgeneric code. — upperPadding","text":"","code":"upperPadding(M, relative = FALSE)"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a matrix or a list of matrices\nfor use in some cgeneric code. — upperPadding","text":"M matrix list matrices relative logical. list matrices supplied, indicates returned relative index value matrix. See details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a matrix or a list of matrices\nfor use in some cgeneric code. — upperPadding","text":"unique matrix given, return upper triangle considering 'T' representation Matrix package. list matrices given, return list two elements: 'graph' 'xx'. 'graph' union graph matrix. relative=FALSE, 'xx' matrix number column equals number matrices imputed. relative=TRUE, list length equal number matrices imputed. See details.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare a matrix or a list of matrices\nfor use in some cgeneric code. — upperPadding","text":"relative=FALSE, columns 'xx' elements corresponding matrix padded fill pattern union graph. relative=TRUE, element 'xx' list relative index, 'r', non-zero elements matrix returned relative union graph, non-lower elements, 'x', corresponding matrix, vector, 'o', number non-zero elements line resulting matrix.","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/upperPadding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a matrix or a list of matrices\nfor use in some cgeneric code. — upperPadding","text":"","code":"A <- sparseMatrix(   i = c(1, 1, 2, 3, 3, 5),   j = c(2, 5, 3, 4, 5, 5),   x = -(0:5), symmetric = TRUE ) A #> 5 x 5 sparse Matrix of class \"dsCMatrix\" #>                     #> [1,]  .  0  .  . -1 #> [2,]  0  . -2  .  . #> [3,]  . -2  . -3 -4 #> [4,]  .  . -3  .  . #> [5,] -1  . -4  . -5 upperPadding(A) #> 5 x 5 sparse Matrix of class \"dgTMatrix\" #>                   #> [1,] . .  .  . -1 #> [2,] . . -2  .  . #> [3,] . .  . -3 -4 #> [4,] . .  .  .  . #> [5,] . .  .  . -5 B <- Diagonal(nrow(A), -colSums(A)) list(a = A, a = B) #> $a #> 5 x 5 sparse Matrix of class \"dsCMatrix\" #>                     #> [1,]  .  0  .  . -1 #> [2,]  0  . -2  .  . #> [3,]  . -2  . -3 -4 #> [4,]  .  . -3  .  . #> [5,] -1  . -4  . -5 #>  #> $a #> 5 x 5 diagonal matrix of class \"ddiMatrix\" #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    .    .    .    . #> [2,]    .    2    .    .    . #> [3,]    .    .    9    .    . #> [4,]    .    .    .    3    . #> [5,]    .    .    .    .   10 #>  upperPadding(list(a = A, b = B)) #> $graph #> 5 x 5 sparse Matrix of class \"dgTMatrix\" #>                #> [1,] 1 . . . 1 #> [2,] . 1 1 . . #> [3,] . . 1 1 1 #> [4,] . . . 1 . #> [5,] . . . . 1 #>  #> $xx #>        a  b #>  [1,]  0  1 #>  [2,] -1  0 #>  [3,]  0  2 #>  [4,] -2  0 #>  [5,]  0  9 #>  [6,] -3  0 #>  [7,] -4  0 #>  [8,]  0  3 #>  [9,] -5 10 #>  upperPadding(list(a = A, b = B), relative = TRUE) #> $graph #> 5 x 5 sparse Matrix of class \"dgTMatrix\" #>                #> [1,] 1 . . . 1 #> [2,] . 1 1 . . #> [3,] . . 1 1 1 #> [4,] . . . 1 . #> [5,] . . . . 1 #>  #> $xx #> $xx$a #> $xx$a$r #> [1] 2 4 6 7 9 #>  #> $xx$a$x #> [1] -1 -2 -3 -4 -5 #>  #>  #> $xx$b #> $xx$b$r #> [1] 1 3 5 8 9 #>  #> $xx$b$x #> [1]  1  2  9  3 10 #>  #>  #>"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the world map — worldMap","title":"Get the world map — worldMap","text":"Consider world map, fix wrap around convert Mollweide projection km distance (default, can changed).","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the world map — worldMap","text":"","code":"worldMap(   crs = sp::CRS(\"+proj=moll +units=km\"),   scale = \"medium\",   returnclass = c(\"sp\", \"sf\") )"},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the world map — worldMap","text":"crs CRS object target coordinates. Default Mollweide projection units kilometers. scale see help rnaturalearth::ne_countries() returnclass defined sp returnclass = \"sp\" sf package returnclass = \"sf\".","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the world map — worldMap","text":"world map","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the world map — worldMap","text":"Requires rnaturalearth package","code":""},{"path":"https://eliaskrainski.github.io/INLAspacetime/reference/worldMap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get the world map — worldMap","text":"world map data maps R package.","code":""}]
